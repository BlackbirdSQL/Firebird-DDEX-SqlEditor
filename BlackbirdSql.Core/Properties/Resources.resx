<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentParsing_DoubleQuoteMissingError" xml:space="preserve">
    <value>The argument string is missing a closing double quote.</value>
  </data>
  <data name="ClassNumber" xml:space="preserve">
    <value>Class: {0} Number: {1} </value>
  </data>
  <data name="CommandProvider_AlterFunctionScript" xml:space="preserve">
    <value>Open &amp;Alter Function Source</value>
  </data>
  <data name="CommandProvider_AlterStoredProcedureScript" xml:space="preserve">
    <value>Open &amp;Alter Procedure Source</value>
  </data>
  <data name="CommandProvider_AlterTriggerScript" xml:space="preserve">
    <value>Open &amp;Alter Trigger Expression</value>
  </data>
  <data name="CommandProvider_AlterViewScript" xml:space="preserve">
    <value>Open &amp;Alter View Definition</value>
  </data>
  <data name="CommandProvider_CancelExecution" xml:space="preserve">
    <value>SqlViewTextObjectCommandProvider_CancelExecution</value>
  </data>
  <data name="CommandProvider_DeleteDatabaseConnection" xml:space="preserve">
    <value>Remove Connection</value>
  </data>
  <data name="CommandProvider_EditDatabaseLabel" xml:space="preserve">
    <value>&amp;Rename Connection</value>
  </data>
  <data name="CommandProvider_NewGlobalDesigner" xml:space="preserve">
    <value>&amp;New Designer Query</value>
  </data>
  <data name="CommandProvider_NewQuery" xml:space="preserve">
    <value>New SQL &amp;Query</value>
  </data>
  <data name="CommandProvider_NewSystemDesigner" xml:space="preserve">
    <value>&amp;New System Designer Query</value>
  </data>
  <data name="CommandProvider_NewUserDesigner" xml:space="preserve">
    <value>&amp;New User Designer Query</value>
  </data>
  <data name="CommandProvider_NoSourceAvailable" xml:space="preserve">
    <value>No source available</value>
  </data>
  <data name="CommandProvider_OpenColumnScript" xml:space="preserve">
    <value>&amp;Open Column Expression</value>
  </data>
  <data name="CommandProvider_OpenForeignKeyScript" xml:space="preserve">
    <value>&amp;Open Foreign Key Expression</value>
  </data>
  <data name="CommandProvider_OpenFunctionScript" xml:space="preserve">
    <value>&amp;Open Create Function Source</value>
  </data>
  <data name="CommandProvider_OpenIndexScript" xml:space="preserve">
    <value>&amp;Open Index Expression</value>
  </data>
  <data name="CommandProvider_OpenScript" xml:space="preserve">
    <value>&amp;Open Script</value>
  </data>
  <data name="CommandProvider_OpenStoredProcedureScript" xml:space="preserve">
    <value>&amp;Open Executable Procedure Source</value>
  </data>
  <data name="CommandProvider_OpenSystemScript" xml:space="preserve">
    <value>&amp;Open System Script</value>
  </data>
  <data name="CommandProvider_OpenTableScript" xml:space="preserve">
    <value>&amp;Open Table SQL Query</value>
  </data>
  <data name="CommandProvider_OpenTriggerScript" xml:space="preserve">
    <value>&amp;Open Create Trigger Expression</value>
  </data>
  <data name="CommandProvider_OpenUserScript" xml:space="preserve">
    <value>&amp;Open User Script</value>
  </data>
  <data name="CommandProvider_OpenViewScript" xml:space="preserve">
    <value>&amp;Open View Definition</value>
  </data>
  <data name="CommandProvider_PathTooLong" xml:space="preserve">
    <value>The document moniker path name is too long</value>
  </data>
  <data name="CommandProvider_PromptSaveObject" xml:space="preserve">
    <value>SqlViewTextObjectCommandProvider_PromptSaveObject</value>
  </data>
  <data name="CommandProvider_RetrieveTableDesignerData" xml:space="preserve">
    <value>Open Table in &amp;Designer</value>
  </data>
  <data name="CommandProvider_RetrieveViewDesignerData" xml:space="preserve">
    <value>Open View in &amp;Designer</value>
  </data>
  <data name="CommandProvider_ValidateGlobalSolution" xml:space="preserve">
    <value>Validate Solution Config</value>
  </data>
  <data name="DbProviderFactoriesEx_Recovery" xml:space="preserve">
    <value>DbProviderFactory recovery -&gt; Validating {0} factories...</value>
  </data>
  <data name="DbProviderFactoriesEx_RecoveryConfigurationManagerConfigurationManager" xml:space="preserve">
    <value>DbProviderFactory recovery -&gt; Invariant '{0}' recovered using ConfigurationManager removal after registration failure.</value>
  </data>
  <data name="DbProviderFactoriesEx_RecoveryConfigurationManagerInvalidated" xml:space="preserve">
    <value>DbProviderFactory recovery -&gt; Invariant '{0}' recovered using ConfigurationManager removal after load error.</value>
  </data>
  <data name="DbProviderFactoriesEx_RecoveryDirectConfigurationManager" xml:space="preserve">
    <value>DbProviderFactory recovery -&gt; Invariant '{0}' recovered using direct removal after registration failure.</value>
  </data>
  <data name="DbProviderFactoriesEx_RecoveryDirectInvalidated" xml:space="preserve">
    <value>DbProviderFactory recovery -&gt; Invariant '{0}' recovered using direct removal after load error.</value>
  </data>
  <data name="DbProviderFactoriesEx_RecoveryInvariantFailed" xml:space="preserve">
    <value>DbProviderFactory recovery -&gt; Invariant '{0}' error. Timed out waiting for factory to appear.</value>
  </data>
  <data name="DbProviderFactoriesEx_RecoveryInvariantFaulted" xml:space="preserve">
    <value>DbProviderFactory recovery -&gt; Invariant '{0}' has faulted. Attempting recovery...</value>
  </data>
  <data name="DbProviderFactoriesEx_RecoveryResult" xml:space="preserve">
    <value>DbProviderFactory recovery completed: Found {0} faulted invariants, {1} recovered. Total recovery time was {2}ms.</value>
  </data>
  <data name="EngineTypeIconNotfound" xml:space="preserve">
    <value>Could not locate icon for Server Engine Type {0}.</value>
  </data>
  <data name="ErmBindingSource_Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ExceptionAttemptToAddNullConnection" xml:space="preserve">
    <value>Attempt to add a null connection</value>
  </data>
  <data name="ExceptionConnectionClosed" xml:space="preserve">
    <value>Connection closed</value>
  </data>
  <data name="ExceptionConnectionDisposed" xml:space="preserve">
    <value>Connection disposed</value>
  </data>
  <data name="ExceptionConnectionNull" xml:space="preserve">
    <value>Connection is null</value>
  </data>
  <data name="ExceptionCreateBatchExecutionObject" xml:space="preserve">
    <value>Unable to create batch execution object: {0}.</value>
  </data>
  <data name="ExceptionDuplicateSingletonInstances" xml:space="preserve">
    <value>Singleton instance already exists. Attempt to create duplicate {0} instances.</value>
  </data>
  <data name="ExceptionNetUriNotJustSerialization" xml:space="preserve">
    <value>UriComponents.SerializationInfoString must not be combined with other UriComponents.</value>
  </data>
  <data name="ExceptionParameterDescriberNotFound" xml:space="preserve">
    <value>Could not locate Describer for connection parameter '{0}'.</value>
  </data>
  <data name="ExceptionTriggerErrorAtColumnIndex" xml:space="preserve">
    <value>Trigger Error at Column index: {0}.</value>
  </data>
  <data name="ExceptionTriggerGeneratorErrorAtColumnIndex" xml:space="preserve">
    <value>Error at Trigger column index: {0}, Generator column index: {1}.</value>
  </data>
  <data name="Exception_FailedToSaveFile" xml:space="preserve">
    <value>Failed to save file: {0}</value>
  </data>
  <data name="ExEventsAlreadyEnabled" xml:space="preserve">
    <value>Events already enabled.</value>
  </data>
  <data name="IgnoreOnException" xml:space="preserve">
    <value>Retry number {0}. Ignoring Exception: {1}</value>
  </data>
  <data name="LoadTimeStatistics" xml:space="preserve">
    <value>Load statistics: Async initialization: {0}ms, MainThread initializations: {1}ms
                 SwitchToMainThread: {2}ms
                 Total time (excl. SwitchToMainThread): {3}ms.</value>
  </data>
  <data name="NewQueryBaseName" xml:space="preserve">
    <value>NewQuery</value>
  </data>
  <data name="Properties_NotExtensible" xml:space="preserve">
    <value>The properties are not extensible.</value>
  </data>
  <data name="Remove_Failed_Property_NotFound" xml:space="preserve">
    <value>Remove failed. Property {0} does not exist.</value>
  </data>
  <data name="RetryOnException" xml:space="preserve">
    <value>Retry number {0}. Delaying {1} ms before next retry. Exception: {2}</value>
  </data>
  <data name="RunningConnectionTableEdmDataset" xml:space="preserve">
    <value>[{0}] {1}</value>
  </data>
  <data name="RunningConnectionTableGlyphFormat" xml:space="preserve">
    <value>{0} {1}</value>
  </data>
  <data name="RunningConnectionTableProjectDatasetId" xml:space="preserve">
    <value>[{0}] {1}</value>
  </data>
  <data name="RunningConnectionTableUtilityDatasetId" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="TextBoxRequiredFieldToolTip" xml:space="preserve">
    <value>This field cannot be empty</value>
  </data>
</root>