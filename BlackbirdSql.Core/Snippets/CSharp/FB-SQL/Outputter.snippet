<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Operator - outputter</Title>
      <Author>Microsoft Corporation</Author>
      <Description>Code snippet for Outputter</Description>
      <HelpUrl>https://msdn.microsoft.com/library/azure/mt621334.aspx</HelpUrl>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Shortcut>Outputter</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>classname</ID>
          <Type></Type>
          <ToolTip>Name of your Outputter</ToolTip>
          <Default>MyOutputter</Default>
          <Function></Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="" Delimiter="$">
          <![CDATA[      /// <summary> 
    /// For more information about writing UDOs, please refer to http://go.microsoft.com/fwlink/?LinkID=623598&clcid=0x409 
    /// </summary> 
    [SqlUserDefinedOutputter] 
    public class $classname$ : IOutputter 
    { 
        private string row_delim;// = Encoding.ASCII.GetBytes("~"); 
        private char[] col_delim;// = new char[] { ',' }; 


        public $classname$(string trow_del, string tcol_del) 
        { 
            row_delim = trow_del; 
            col_delim = tcol_del.ToCharArray(); 
        }  
        /// <summary> 
        ///  
        /// </summary> 
        /// <param name="input"></param> 
        /// <param name="output"></param> 
        /// <returns></returns> 
        public override void Output(IRow input, IUnstructuredWriter output) 
        { 
            using (var outputWriter = new StreamWriter(output.BaseStream)) 
            { 
                int columnCount = input.Schema.Count; 
                for (int columnIdx = 0; columnIdx < columnCount; columnIdx++) 
                { 
                    if (columnIdx == 2) 
                        outputWriter.Write(input.Get<long>(columnIdx)); 
                    else 
                        outputWriter.Write(input.Get<string>(columnIdx)); 
                    if (columnIdx == (columnCount - 1)) 
                        outputWriter.Write(row_delim); 
                    else 
                        outputWriter.Write(col_delim); 
                } 
            } 
        } 
    } 
]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
