-- Begin section 1 - Main Select


EXECUTE BLOCK
	RETURNS (
		TABLE_CATALOG varchar(50), TABLE_SCHEMA varchar(50), TABLE_NAME varchar(100), TRIGGER_NAME varchar(100),
		IS_SYSTEM_OBJECT boolean, TRIGGER_TYPE bigint, IS_INACTIVE smallint, DESC smallint,
		PRIORITY smallint, EXPRESSION blob sub_type 1, DESCRIPTION blob sub_type 1,
		DEPENDENCY_FIELDS blob sub_type 1, DEPENDENCY_COUNT int, IS_IDENTITY boolean, SEQUENCE_GENERATOR varchar(50),
		IDENTITY_SEED bigint, IDENTITY_INCREMENT int, IDENTITY_CURRENT bigint)
AS
DECLARE DEPENDENCY_FIELD varchar(50);
DECLARE CONSTRAINT_TYPE varchar(20);
DECLARE SEGMENT_FIELD varchar(50);
DECLARE IDENTITY_TYPE smallint;
-- :IDENTITY_FLAG is Firefox's interpretation of an identity field
-- We care about it if and only if :SEQUENCE_GENERATOR is not null
DECLARE IDENTITY_FLAG int;
BEGIN
	FOR
		SELECT
            -- :TABLE_CATALOG, :TABLE_SCHEMA, :TABLE_NAME, :TRIGGER_NAME
			null, null, trg.rdb$relation_name, trg.rdb$trigger_name,
			-- :IS_SYSTEM_OBJECT
			(CASE WHEN trg.rdb$system_flag <> 1 THEN false ELSE true END),
			-- :TRIGGER_TYPE, :IS_INACTIVE, :DESC
			trg.rdb$trigger_type, trg.rdb$trigger_inactive, trg.rdb$trigger_sequence,
			-- :EXPRESSION
			(CASE WHEN trg.rdb$trigger_source IS NULL AND trg.rdb$trigger_blr IS NOT NULL THEN
				cast(trg.rdb$trigger_blr as blob sub_type 1)
			ELSE
				trg.rdb$trigger_source
			END),
			-- :DESCRIPTION
			trg.rdb$description,
			-- Initial value of :IS_IDENTITY
			(CASE WHEN trg.rdb$flags = 1 AND trg.rdb$trigger_sequence = 1 AND trg.rdb$trigger_type = 1 THEN true ELSE false END)
		FROM rdb$triggers trg
		
-- End of section 1

-- Begin section 2 - Dependency select

ORDER BY trg.rdb$trigger_name
		INTO :TABLE_CATALOG, :TABLE_SCHEMA, :TABLE_NAME, :TRIGGER_NAME, :IS_SYSTEM_OBJECT, :TRIGGER_TYPE, :IS_INACTIVE,
            :PRIORITY, :EXPRESSION, :DESCRIPTION, :IS_IDENTITY
	-- Loop through each trigger
	DO BEGIN
		-- We want to get a comma-separated list of dependency fields her and the count.
		-- Further, if it still qualifies as ID_IDENTITY see if we can extract the generator info

		:DEPENDENCY_FIELDS = ''; :DEPENDENCY_COUNT = 0; :SEQUENCE_GENERATOR = null; :IDENTITY_SEED = 0;
		:IDENTITY_INCREMENT = 0; :IDENTITY_CURRENT = 0; :IDENTITY_TYPE = null;

		FOR
			SELECT
				-- :DEPENDENCY_FIELD, :CONSTRAINT_TYPE, :SEGMENT_FIELD
				fd.rdb$field_name, fd_con.rdb$constraint_type, fd_seg.rdb$field_name,
                -- :IDENTITY_TYPE [fd_rfr.rdb$identity_type|null]{0}
				fd_rfr.rdb$identity_type,
				-- :SEQUENCE_GENERATOR, :IDENTITY_SEED, :IDENTITY_INCREMENT
				fd_gen.rdb$generator_name, fd_gen.rdb$initial_value, fd_gen.rdb$generator_increment
			FROM rdb$dependencies fd
			LEFT OUTER JOIN rdb$relation_constraints fd_con
				ON fd_con.rdb$relation_name = fd.rdb$depended_on_name AND fd_con.rdb$constraint_type = 'PRIMARY KEY'
			LEFT OUTER JOIN rdb$index_segments fd_seg
				ON fd_con.rdb$index_name IS NOT NULL AND fd_seg.rdb$index_name = fd_con.rdb$index_name AND fd_seg.rdb$field_name = fd.rdb$field_name
			LEFT OUTER JOIN rdb$relation_fields fd_rfr
				ON fd_seg.rdb$index_name IS NOT NULL AND fd_rfr.rdb$relation_name = fd_con.rdb$relation_name AND fd_rfr.rdb$field_name = fd_seg.rdb$field_name
			LEFT OUTER JOIN rdb$generators fd_gen
                -- [= fd_rfr.rdb$generator_name|IS NULL]{1}
				ON fd_gen.rdb$generator_name = fd_rfr.rdb$generator_name 
			WHERE fd.rdb$field_name IS NOT NULL AND fd.rdb$dependent_name = :TRIGGER_NAME AND fd.rdb$depended_on_name = :TABLE_NAME
			INTO :DEPENDENCY_FIELD, :CONSTRAINT_TYPE, :SEGMENT_FIELD, :IDENTITY_TYPE, :SEQUENCE_GENERATOR, :IDENTITY_SEED, :IDENTITY_INCREMENT
		DO BEGIN
			-- If there are no segments cannot be an identity trigger
			IF (:SEGMENT_FIELD IS NULL) THEN
				:IS_IDENTITY = false;
			:DEPENDENCY_COUNT = :DEPENDENCY_COUNT + 1;
			IF (DEPENDENCY_FIELDS <> '') THEN
				:DEPENDENCY_FIELDS = :DEPENDENCY_FIELDS || ', ';
			:DEPENDENCY_FIELDS = :DEPENDENCY_FIELDS || TRIM(DEPENDENCY_FIELD);

			IF (:DEPENDENCY_COUNT = 1 AND :SEQUENCE_GENERATOR IS NOT NULL) THEN
			BEGIN
				EXECUTE STATEMENT 'SELECT gen_id(' || SEQUENCE_GENERATOR || ', 0) FROM rdb$database' INTO :IDENTITY_CURRENT;
				:IDENTITY_CURRENT = :IDENTITY_CURRENT - :IDENTITY_INCREMENT;
				IF (:IDENTITY_CURRENT < :IDENTITY_SEED) THEN
				BEGIN
					:IDENTITY_CURRENT = :IDENTITY_SEED;
				END
			END
		END
        -- If the trigger dependency count is not 1 it can't be an identity field.
		IF (:DEPENDENCY_COUNT <> 1) THEN
			:IS_IDENTITY = false;

        IF (:IS_IDENTITY AND :SEQUENCE_GENERATOR IS NOT NULL) THEN
        BEGIN
            -- There is a generator so :IDENTITY_FLAG determines if is-identity still holds true
            IF (:IDENTITY_FLAG IS NULL OR :IDENTITY_TYPE = 0) THEN
                :IS_IDENTITY = false;
        END
        IF (:IS_IDENTITY AND :SEQUENCE_GENERATOR IS NULL) THEN
		BEGIN
            -- [Unidentifiable]{2}
            :SEQUENCE_GENERATOR = 'Unidentifiable';
			:IDENTITY_SEED = -1;
			:IDENTITY_INCREMENT = -1;
			:IDENTITY_CURRENT = -1;
        END

		IF (NOT :IS_IDENTITY) THEN
		BEGIN
			:SEQUENCE_GENERATOR = NULL;
			:IDENTITY_SEED = 0;
			:IDENTITY_INCREMENT = 0;
			:IDENTITY_CURRENT = 0;
		END

-- End section 2 

-- Begin section 3 - Trigger row complete

        SUSPEND;            

-- End section 3

-- Finalize

	END
END
