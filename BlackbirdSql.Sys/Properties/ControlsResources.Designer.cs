//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlackbirdSql.Sys.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ControlsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ControlsResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlackbirdSql.Sys.Properties.ControlsResources", typeof(ControlsResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Abort.
        /// </summary>
        internal static string AbortButton {
            get {
                return ResourceManager.GetString("AbortButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}....
        /// </summary>
        internal static string AddEllipsis {
            get {
                return ResourceManager.GetString("AddEllipsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADDITIONAL INFORMATION:.
        /// </summary>
        internal static string AdditionalInfo {
            get {
                return ResourceManager.GetString("AdditionalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All messages.
        /// </summary>
        internal static string AdvInfoAllMessages {
            get {
                return ResourceManager.GetString("AdvInfoAllMessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional data.
        /// </summary>
        internal static string AdvInfoData {
            get {
                return ResourceManager.GetString("AdvInfoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help link.
        /// </summary>
        internal static string AdvInfoHelpLink {
            get {
                return ResourceManager.GetString("AdvInfoHelpLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        internal static string AdvInfoMessage {
            get {
                return ResourceManager.GetString("AdvInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BUTTONS:.
        /// </summary>
        internal static string Buttons {
            get {
                return ResourceManager.GetString("Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string CancelButton {
            get {
                return ResourceManager.GetString("CancelButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation could not be completed..
        /// </summary>
        internal static string CantComplete {
            get {
                return ResourceManager.GetString("CantComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Show method can be called only once on an ExceptionMessageBox object. To display a new message, you must create a new instance of the ExceptionMessageBox class..
        /// </summary>
        internal static string CantReuseObject {
            get {
                return ResourceManager.GetString("CantReuseObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Technical details cannot be displayed..
        /// </summary>
        internal static string CantShowTechnicalDetailsError {
            get {
                return ResourceManager.GetString("CantShowTechnicalDetailsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access the following help link: {0}..
        /// </summary>
        internal static string CantStartHelpLink {
            get {
                return ResourceManager.GetString("CantStartHelpLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For help, click: {0}.
        /// </summary>
        internal static string ClipboardOrEmailHelpLink {
            get {
                return ResourceManager.GetString("ClipboardOrEmailHelpLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Location:.
        /// </summary>
        internal static string CodeLocation {
            get {
                return ResourceManager.GetString("CodeLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect to Server.
        /// </summary>
        internal static string ConnectToServer {
            get {
                return ResourceManager.GetString("ConnectToServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message cannot be copied to the clipboard..
        /// </summary>
        internal static string CopyToClipboardError {
            get {
                return ResourceManager.GetString("CopyToClipboardError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify text for the button when Buttons = NewMessageBoxButtons.Custom..
        /// </summary>
        internal static string CustomButtonTextError {
            get {
                return ResourceManager.GetString("CustomButtonTextError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to D&amp;o not show this message again.
        /// </summary>
        internal static string DefaultCheckboxText {
            get {
                return ResourceManager.GetString("DefaultCheckboxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BlackbirdSql Server Management.
        /// </summary>
        internal static string DefaultMessageBoxCaption {
            get {
                return ResourceManager.GetString("DefaultMessageBoxCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Error: {0}).
        /// </summary>
        internal static string ErrorNumber {
            get {
                return ResourceManager.GetString("ErrorNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ({0}).
        /// </summary>
        internal static string ErrorSource {
            get {
                return ResourceManager.GetString("ErrorSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ({0}, Error: {1}).
        /// </summary>
        internal static string ErrorSourceNumber {
            get {
                return ResourceManager.GetString("ErrorSourceNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Fail.
        /// </summary>
        internal static string FailButton {
            get {
                return ResourceManager.GetString("FailButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Help For: &quot;{0}&quot;.
        /// </summary>
        internal static string HelpMenuText {
            get {
                return ResourceManager.GetString("HelpMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Ignore.
        /// </summary>
        internal static string IgnoreButton {
            get {
                return ResourceManager.GetString("IgnoreButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message ID.
        /// </summary>
        internal static string MessageID {
            get {
                return ResourceManager.GetString("MessageID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MessageLevelCount must be greater than 0..
        /// </summary>
        internal static string MessageLevelCountError {
            get {
                return ResourceManager.GetString("MessageLevelCountError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message Source.
        /// </summary>
        internal static string MessageSource {
            get {
                return ResourceManager.GetString("MessageSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TITLE: .
        /// </summary>
        internal static string MessageTitle {
            get {
                return ResourceManager.GetString("MessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;No.
        /// </summary>
        internal static string NoButton {
            get {
                return ResourceManager.GetString("NoButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} Info.
        /// </summary>
        internal static string NodeExceptionInfo {
            get {
                return ResourceManager.GetString("NodeExceptionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Help Available For: &quot;{0}&quot;.
        /// </summary>
        internal static string NoHelpMenuText {
            get {
                return ResourceManager.GetString("NoHelpMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string OKButton {
            get {
                return ResourceManager.GetString("OKButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item Name.
        /// </summary>
        internal static string PrivacyItemName {
            get {
                return ResourceManager.GetString("PrivacyItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        internal static string PrivacyItemValue {
            get {
                return ResourceManager.GetString("PrivacyItemValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Name.
        /// </summary>
        internal static string ProductName {
            get {
                return ResourceManager.GetString("ProductName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Version.
        /// </summary>
        internal static string ProductVersion {
            get {
                return ResourceManager.GetString("ProductVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection changed.
        /// </summary>
        internal static string RctManager_CaptionConnectionChanged {
            get {
                return ResourceManager.GetString("RctManager_CaptionConnectionChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection change Database name conflict.
        /// </summary>
        internal static string RctManager_CaptionConnectionChangeDatabaseNameConflict {
            get {
                return ResourceManager.GetString("RctManager_CaptionConnectionChangeDatabaseNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection change ConnectionName conflict.
        /// </summary>
        internal static string RctManager_CaptionConnectionChangeNameConflict {
            get {
                return ResourceManager.GetString("RctManager_CaptionConnectionChangeNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConnectionName conflict.
        /// </summary>
        internal static string RctManager_CaptionConnectionNameConflict {
            get {
                return ResourceManager.GetString("RctManager_CaptionConnectionNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database name conflict.
        /// </summary>
        internal static string RctManager_CaptionDatabaseNameConflict {
            get {
                return ResourceManager.GetString("RctManager_CaptionDatabaseNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid connection name.
        /// </summary>
        internal static string RctManager_CaptionInvalidConnectionName {
            get {
                return ResourceManager.GetString("RctManager_CaptionInvalidConnectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New connection.
        /// </summary>
        internal static string RctManager_CaptionNewConnection {
            get {
                return ResourceManager.GetString("RctManager_CaptionNewConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New connection Database name conflict.
        /// </summary>
        internal static string RctManager_CaptionNewConnectionDatabaseNameConflict {
            get {
                return ResourceManager.GetString("RctManager_CaptionNewConnectionDatabaseNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New connection ConnectionName conflict.
        /// </summary>
        internal static string RctManager_CaptionNewConnectionNameConflict {
            get {
                return ResourceManager.GetString("RctManager_CaptionNewConnectionNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modifed settings are allocated to connection &apos;{0}&apos;, and will be applied to it instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextConnectionChanged {
            get {
                return ResourceManager.GetString("RctManager_TextConnectionChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modifed settings are allocated to connection &apos;{0}&apos;, and will be applied to it instead.
        ///The Proposed Database Name &apos;{1}&apos; is already allocated  and &apos;{2}&apos; will be used instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextConnectionChangeDatabaseNameConflict {
            get {
                return ResourceManager.GetString("RctManager_TextConnectionChangeDatabaseNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modifed settings are allocated to connection &apos;{0}&apos;, and will be applied to it instead.
        ///The Proposed Connection Name &apos;{1}&apos; is already allocated and &apos;{2}&apos; will be used instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextConnectionChangeNameConflict {
            get {
                return ResourceManager.GetString("RctManager_TextConnectionChangeNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Proposed Connection Name &apos;{0}&apos; is already allocated to another connection and &apos;{1}&apos; will be used instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextConnectionNameConflict {
            get {
                return ResourceManager.GetString("RctManager_TextConnectionNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Name &apos;{0}&apos; is already allocated to another connection and &apos;{1}&apos; will be used instead.
        ///
        ///Continue?
        ///
        ///(Note: The RunningConnectionTable keeps track of all connections and connection names, even if they are deleted or renamed in Server Explorer, so that windows that may be using them can still be serviced. Reload the solution to refresh the Rct.).
        /// </summary>
        internal static string RctManager_TextConnectionNameConflictLong {
            get {
                return ResourceManager.GetString("RctManager_TextConnectionNameConflictLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Proposed Database Name &apos;{0}&apos; is already allocated to another connection and &apos;{1}&apos; will be used instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextDatabaseNameConflict {
            get {
                return ResourceManager.GetString("RctManager_TextDatabaseNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection names beginning with &apos;{0}&apos; are reserved for connection monikers. The ConnectionName &apos;{1}&apos; is not permitted..
        /// </summary>
        internal static string RctManager_TextInvalidConnectionName {
            get {
                return ResourceManager.GetString("RctManager_TextInvalidConnectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings provided will create a new connection. Continue?.
        /// </summary>
        internal static string RctManager_TextNewConnection {
            get {
                return ResourceManager.GetString("RctManager_TextNewConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings provided will create a new connection.
        ///The Proposed Database Name &apos;{0}&apos; is already allocated and &apos;{1}&apos; will be used instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextNewConnectionDatabaseNameConflict {
            get {
                return ResourceManager.GetString("RctManager_TextNewConnectionDatabaseNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings provided will create a new connection.
        ///The Proposed Connection Name &apos;{0}&apos; is already allocated and &apos;{1}&apos; will be used instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextNewConnectionNameConflict {
            get {
                return ResourceManager.GetString("RctManager_TextNewConnectionNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new Server Explorer Connection will be created. Continue?.
        /// </summary>
        internal static string RctManager_TextNewSEConnection {
            get {
                return ResourceManager.GetString("RctManager_TextNewSEConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings provided will create a new Server Explorer connection.
        ///The Proposed Database Name &apos;{0}&apos; is already allocated and &apos;{1}&apos; will be used instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextNewSEConnectionDatabaseNameConflict {
            get {
                return ResourceManager.GetString("RctManager_TextNewSEConnectionDatabaseNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings provided will create a new Server Explorer connection.
        ///The Proposed Connection Name &apos;{0}&apos; is already allocated and &apos;{1}&apos; will be used instead.
        ///
        ///Continue?.
        /// </summary>
        internal static string RctManager_TextNewSEConnectionNameConflict {
            get {
                return ResourceManager.GetString("RctManager_TextNewSEConnectionNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Retry.
        /// </summary>
        internal static string RetryButton {
            get {
                return ResourceManager.GetString("RetryButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Number: {0}.
        /// </summary>
        internal static string SqlError {
            get {
                return ResourceManager.GetString("SqlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line Number: {0}.
        /// </summary>
        internal static string SqlLineNumber {
            get {
                return ResourceManager.GetString("SqlLineNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Procedure: {0}.
        /// </summary>
        internal static string SqlProcedure {
            get {
                return ResourceManager.GetString("SqlProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL Server Information.
        /// </summary>
        internal static string SqlServerInfo {
            get {
                return ResourceManager.GetString("SqlServerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Name: {0}.
        /// </summary>
        internal static string SqlServerName {
            get {
                return ResourceManager.GetString("SqlServerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Severity: {0}.
        /// </summary>
        internal static string SqlSeverity {
            get {
                return ResourceManager.GetString("SqlSeverity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State: {0}.
        /// </summary>
        internal static string SqlState {
            get {
                return ResourceManager.GetString("SqlState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Yes.
        /// </summary>
        internal static string YesButton {
            get {
                return ResourceManager.GetString("YesButton", resourceCulture);
            }
        }
    }
}
