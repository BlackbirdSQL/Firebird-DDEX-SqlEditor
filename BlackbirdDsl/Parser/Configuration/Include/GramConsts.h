#pragma once
#include "pch.h"
#include "CPentaCommon.h"


using namespace System::Collections::Generic;

namespace BlackbirdDsl {


ref class DslParsers abstract sealed
{
protected:
	static Dictionary<SysStr^, int>^ _Tags = nullptr;

public:
	static const int BRACKET = 0;
	static const int CREATE = 1;
	static const int TABLE = 2;
	static const int INDEX = 3;
	static const int EXPLAIN = 4;
	static const int DESCRIBE = 5;
	static const int DESC = 6;
	static const int SELECT = 7;
	static const int FROM = 8;
	static const int USING = 9;
	static const int UPDATE = 10;
	static const int GROUP = 11;
	static const int ORDER = 12;
	static const int LIMIT = 13;
	static const int WHERE = 14;
	static const int HAVING = 15;
	static const int SET = 16;
	static const int DUPLICATE = 17;
	static const int INSERT = 18;
	static const int REPLACE = 19;
	static const int DELETE_  = 20;
	static const int VALUES = 21;
	static const int INTO = 22;
	static const int DROP = 23;
	static const int RENAME = 24;
	static const int SHOW = 25;
	static const int OPTIONS = 26;
	static const int WITH = 27;
	static const int TRIGGER = 28;
	static const int NEXT = 29;
	static const int VALUE = 30;



	static property int Tag[SysStr^]
	{
		int get(SysStr ^ parser)
		{
			if (_Tags == nullptr)
				Initialize();

			int tag = -1;

			_Tags->TryGetValue(parser, tag);

			return tag;
		}
	};

	static property Dictionary<SysStr^, int>::KeyCollection^ Keys
	{
		Dictionary<SysStr^, int>::KeyCollection^ get()
		{
			if (_Tags == nullptr)
				Initialize();

			return _Tags->Keys;
		}
	};

	static void Initialize();

};

ref class Quote abstract sealed
{
public:

	static SysStr^ GRAVE = "`";
	static SysStr^ GRAVES = "``";

	static SysStr^ SINGLE = "'";
	static SysStr^ SINGLES = "''";

	static SysStr^ DOUBLE = "\"";
	static SysStr^ DOUBLES = "\"\"";


};



ref class Operators abstract sealed
{
public:

	static SysStr^ OPERATOR = "operator";
	static SysStr^ COLUMNS = "column-list";
};



ref class Expressions abstract sealed
{

public:

	static SysStr^ USER_VARIABLE = "user_variable";
	static SysStr^ SESSION_VARIABLE = "session_variable";
	static SysStr^ GLOBAL_VARIABLE = "global_variable";
	static SysStr^ LOCAL_VARIABLE = "local_variable";

	static SysStr^ COLDEF = "column-def";
	static SysStr^ COLREF = "colref";
	static SysStr^ RESERVED = "reserved";
	static SysStr^ CONSTANT = "const";

	static SysStr^ AGGREGATE_FUNCTION = "aggregate_function";
	static SysStr^ CUSTOM_FUNCTION = "custom_function";

	static SysStr^ SIMPLE_FUNCTION = "function";

	static SysStr^ EXPRESSION = "expression";
	static SysStr^ BRACKET_EXPRESSION = "bracket_expression";
	static SysStr^ TABLE_EXPRESSION = "table_expression";

	static SysStr^ SUBQUERY = "subquery";
	static SysStr^ IN_LIST = "in-list";
	static SysStr^ OPERATOR = "operator";
	static SysStr^ SIGN = "sign";
	static SysStr^ RECORD = "record";

	static SysStr^ MATCH_ARGUMENTS = "match-arguments";
	static SysStr^ MATCH_MODE = "match-mode";

	static SysStr^ ALIAS = "alias";
	static SysStr^ POSITION = "pos";

	static SysStr^ TEMPORARY_TABLE = "temporary-table";
	static SysStr^ TABLE = "table";
	static SysStr^ VIEW = "view";
	static SysStr^ DATABASE = "database";
	static SysStr^ SCHEMA = "schema";
	static SysStr^ TRIGGER = "trigger";
	static SysStr^ NEXT = "next";

	static SysStr^ PROCEDURE = "procedure";
	static SysStr^ ENGINE = "engine";
	static SysStr^ USER = "user";
	static SysStr^ DIRECTORY = "directory";
	static SysStr^ UNION = "union";
	static SysStr^ CHARSET = "character-set";
	static SysStr^ COLLATE = "collation";

	static SysStr^ LIKE = "like";
	static SysStr^ CONSTRAINT = "constraint";
	static SysStr^ PRIMARY_KEY = "primary-key";
	static SysStr^ FOREIGN_KEY = "foreign-key";
	static SysStr^ UNIQUE_IDX = "unique-index";
	static SysStr^ INDEX = "index";
	static SysStr^ FULLTEXT_IDX = "fulltext-index";
	static SysStr^ SPATIAL_IDX = "spatial-index";
	static SysStr^ INDEX_TYPE = "index-type";
	static SysStr^ CHECK = "check";
	static SysStr^ COLUMN_LIST = "column-list";
	static SysStr^ INDEX_COLUMN = "index-column";
	static SysStr^ INDEX_SIZE = "index-size";
	static SysStr^ INDEX_PARSER = "index-parser";
	static SysStr^ INDEX_ALGORITHM = "index-algorithm";
	static SysStr^ INDEX_LOCK = "index-lock";
	static SysStr^ REFERENCE = "foreign-ref";

	static SysStr^ DATA_TYPE = "data-type";
	static SysStr^ COLUMN_TYPE = "column-type";
	static SysStr^ DEF_VALUE = "default-value";
	static SysStr^ COMMENT = "comment";

	static SysStr^ PARTITION = "partition";
	static SysStr^ PARTITION_LIST = "partition-list";
	static SysStr^ PARTITION_RANGE = "partition-range";
	static SysStr^ PARTITION_HASH = "partition-hash";
	static SysStr^ PARTITION_KEY = "partition-key";
	static SysStr^ PARTITION_COUNT = "partition-count";
	static SysStr^ PARTITION_DEF = "partition-def";
	static SysStr^ PARTITION_VALUES = "partition-values";
	static SysStr^ PARTITION_COMMENT = "partition-comment";
	static SysStr^ PARTITION_INDEX_DIR = "partition-index-dir";
	static SysStr^ PARTITION_DATA_DIR = "partition-data-dir";
	static SysStr^ PARTITION_MAX_ROWS = "partition-max-rows";
	static SysStr^ PARTITION_MIN_ROWS = "partition-min-rows";
	static SysStr^ PARTITION_KEY_ALGORITHM = "partition-key-algorithm";

	static SysStr^ SUBPARTITION = "sub-partition";
	static SysStr^ SUBPARTITION_DEF = "sub-partition-def";
	static SysStr^ SUBPARTITION_HASH = "sub-partition-hash";
	static SysStr^ SUBPARTITION_KEY = "sub-partition-key";
	static SysStr^ SUBPARTITION_COUNT = "sub-partition-count";
	static SysStr^ SUBPARTITION_COMMENT = "sub-partition-comment";
	static SysStr^ SUBPARTITION_INDEX_DIR = "sub-partition-index-dir";
	static SysStr^ SUBPARTITION_DATA_DIR = "sub-partition-data-dir";
	static SysStr^ SUBPARTITION_MAX_ROWS = "sub-partition-max-rows";
	static SysStr^ SUBPARTITION_MIN_ROWS = "sub-partition-min-rows";
	static SysStr^ SUBPARTITION_KEY_ALGORITHM = "sub-partition-key-algorithm";

	static SysStr^ QUERY = "query";
	static SysStr^ SUBQUERY_FACTORING = "subquery-factoring";

	static SysStr^ VALUE = "value";


};




ref class Keys abstract sealed
{

public:

	static int TOK_ABS = 525;
	static int TOK_ABSOLUTE = 621;
	static int TOK_ACCENT = 526;
	static int TOK_ACOS = 527;
	static int TOK_ACOSH = 623;
	static int TOK_ACTION = 445;
	static int TOK_ACTIVE = 257;
	static int TOK_ADD = 258;
	static int TOK_ADMIN = 446;
	static int TOK_AFTER = 259;
	static int TOK_ALL = 260;
	static int TOK_ALTER = 261;
	static int TOK_ALWAYS = 528;
	static int TOK_AND = 262;
	static int TOK_ANY = 263;
	static int TOK_AS = 264;
	static int TOK_ASC = 265;
	static int TOK_ASCENDING = 265;
	static int TOK_ASCII_CHAR = 529;
	static int TOK_ASCII_VAL = 530;
	static int TOK_ASIN = 531;
	static int TOK_ASINH = 624;
	static int TOK_AT = 266;
	static int TOK_ATAN = 532;
	static int TOK_ATAN2 = 533;
	static int TOK_ATANH = 625;
	static int TOK_AUTO = 268;
	static int TOK_AUTONOMOUS = 590;
	static int TOK_AVG = 267;
	static int TOK_BACKUP = 495;
	static int TOK_BASE64_DECODE = 653;
	static int TOK_BASE64_ENCODE = 654;
	static int TOK_BEFORE = 269;
	static int TOK_BEGIN = 270;
	static int TOK_BETWEEN = 271;
	static int TOK_BIGINT = 479;
	static int TOK_BIN_AND = 534;
	static int TOK_BIN_COMPLEMENT_GTR = 655;
	static int TOK_BIN_COMPLIMENT_LSS = 656;
	static int TOK_BIN_NOT = 606;
	static int TOK_BIN_OPR_COMPLEMENT = 606;
	static int TOK_BIN_OPR_XOR = 538;
	static int TOK_BIN_OR = 535;
	static int TOK_BIN_SHL = 536;
	static int TOK_BIN_SHR = 537;
	static int TOK_BIN_XOR = 538;
	static int TOK_BIN_XOR_GTR = 657;
	static int TOK_BIN_XOR_LSS = 658;
	static int TOK_BINARY = 659;
	static int TOK_BIND = 660;
	static int TOK_BIND_PARAM = 605;
	static int TOK_BIT_LENGTH = 511;
	static int TOK_BLOB = 272;
	static int TOK_BLOB_APPEND = 661;
	static int TOK_BLOCK = 501;
	static int TOK_BODY = 607;
	static int TOK_BOOLEAN = 638;
	static int TOK_BOTH = 508;
	static int TOK_BREAK = 471;
	static int TOK_BY = 273;
	static int TOK_CALLER = 600;
	static int TOK_CASCADE = 447;
	static int TOK_CASE = 480;
	static int TOK_CAST = 274;
	static int TOK_CEIL = 539;
	static int TOK_CEILING = 539;
	static int TOK_CHAR = 337;
	static int TOK_CHAR_LENGTH = 513;
	static int TOK_CHAR_TO_UUID = 591;
	static int TOK_CHARACTER = 275;
	static int TOK_CHARACTER_LENGTH = 513;
	static int TOK_CHECK = 276;
	static int TOK_CLEAR = 662;
	static int TOK_CLOSE = 498;
	static int TOK_COALESCE = 482;
	static int TOK_COLLATE = 277;
	static int TOK_COLLATION = 509;
	static int TOK_COLUMN = 451;
	static int TOK_COMMA = 663;
	static int TOK_COMMENT = 510;
	static int TOK_COMMIT = 278;
	static int TOK_COMMITTED = 279;
	static int TOK_COMMON = 601;
	static int TOK_COMPARE_DECFLOAT = 664;
	static int TOK_COMPUTED = 280;
	static int TOK_CONCATENATE = 281;
	static int TOK_CONDITIONAL = 282;
	static int TOK_CONNECT = 540;
	static int TOK_CONNECTIONS = 665;
	static int TOK_CONSISTENCY = 666;
	static int TOK_CONSTRAINT = 283;
	static int TOK_CONTAINING = 284;
	static int TOK_CONTINUE = 608;
	static int TOK_CORR = 667;
	static int TOK_COS = 541;
	static int TOK_COSH = 542;
	static int TOK_COT = 543;
	static int TOK_COUNT = 285;
	static int TOK_COUNTER = 668;
	static int TOK_COVAR_POP = 669;
	static int TOK_COVAR_SAMP = 670;
	static int TOK_CREATE = 286;
	static int TOK_CROSS = 504;
	static int TOK_CRYPT_HASH = 671;
	static int TOK_CSTRING = 287;
	static int TOK_CTR_BIG_ENDIAN = 672;
	static int TOK_CTR_LENGTH = 673;
	static int TOK_CTR_LITTLE_ENDIAN = 674;
	static int TOK_CUME_DIST = 675;
	static int TOK_CURRENT = 288;
	static int TOK_CURRENT_CONNECTION = 477;
	static int TOK_CURRENT_DATE = 464;
	static int TOK_CURRENT_ROLE = 470;
	static int TOK_CURRENT_TIME = 465;
	static int TOK_CURRENT_TIMESTAMP = 466;
	static int TOK_CURRENT_TRANSACTION = 478;
	static int TOK_CURRENT_USER = 469;
	static int TOK_CURSOR = 289;
	static int TOK_DATA = 602;
	static int TOK_DATABASE = 290;
	static int TOK_DATE = 291;
	static int TOK_DATEADD = 544;
	static int TOK_DATEDIFF = 545;
	static int TOK_DAY = 456;
	static int TOK_DB_KEY = 292;
	static int TOK_DDL = 609;
	static int TOK_DEBUG = 676;
	static int TOK_DEC = 338;
	static int TOK_DECFLOAT = 677;
	static int TOK_DECIMAL = 293;
	static int TOK_DECIMAL_NUMBER = 648;
	static int TOK_DECLARE = 294;
	static int TOK_DECODE = 546;
	static int TOK_DECRYPT = 610;
	static int TOK_DEFAULT = 295;
	static int TOK_DEFINER = 678;
	static int TOK_DELETE = 296;
	static int TOK_DELETING = 494;
	static int TOK_DENSE_RANK = 629;
	static int TOK_DESC = 297;
	static int TOK_DESCENDING = 297;
	static int TOK_DESCRIPTOR = 474;
	static int TOK_DETERMINISTIC = 627;
	static int TOK_DIFFERENCE = 496;
	static int TOK_DISABLE = 679;
	static int TOK_DISCONNECT = 547;
	static int TOK_DISTINCT = 298;
	static int TOK_DO = 299;
	static int TOK_DOMAIN = 300;
	static int TOK_DOUBLE = 339;
	static int TOK_DROP = 301;
	static int TOK_ELSE = 302;
	static int TOK_ENABLE = 680;
	static int TOK_ENCRYPT = 611;
	static int TOK_END = 303;
	static int TOK_ENGINE = 612;
	static int TOK_ENTRY_POINT = 304;
	static int TOK_ESCAPE = 305;
	static int TOK_EXCEPTION = 306;
	static int TOK_EXCESS = 681;
	static int TOK_EXCLUDE = 682;
	static int TOK_EXECUTE = 307;
	static int TOK_EXISTS = 308;
	static int TOK_EXIT = 309;
	static int TOK_EXP = 548;
	static int TOK_EXTENDED = 683;
	static int TOK_EXTERNAL = 310;
	static int TOK_EXTRACT = 453;
	static int TOK_FALSE = 639;
	static int TOK_FETCH = 499;
	static int TOK_FILE = 340;
	static int TOK_FILTER = 311;
	static int TOK_FIRST = 475;
	static int TOK_FIRST_DAY = 684;
	static int TOK_FIRST_VALUE = 630;
	static int TOK_FIRSTNAME = 592;
	static int TOK_FLOAT = 341;
	static int TOK_FLOAT_NUMBER = 440;
	static int TOK_FLOOR = 549;
	static int TOK_FOLLOWING = 685;
	static int TOK_FOR = 312;
	static int TOK_FOREIGN = 313;
	static int TOK_FREE_IT = 448;
	static int TOK_FROM = 314;
	static int TOK_FULL = 315;
	static int TOK_FUNCTION = 316;
	static int TOK_GDSCODE = 317;
	static int TOK_GEN_ID = 320;
	static int TOK_GEN_UUID = 550;
	static int TOK_GENERATED = 551;
	static int TOK_GENERATOR = 319;
	static int TOK_GEQ = 318;
	static int TOK_GLOBAL = 552;
	static int TOK_GRANT = 321;
	static int TOK_GRANTED = 593;
	static int TOK_GROUP = 322;
	static int TOK_HASH = 553;
	static int TOK_HAVING = 323;
	static int TOK_HEX_DECODE = 686;
	static int TOK_HEX_ENCODE = 687;
	static int TOK_HOUR = 457;
	static int TOK_IDENTITY = 628;
	static int TOK_IDLE = 688;
	static int TOK_IF = 324;
	static int TOK_IGNORE = 520;
	static int TOK_IIF = 502;
	static int TOK_IN = 325;
	static int TOK_INACTIVE = 326;
	static int TOK_INCLUDE = 690;
	static int TOK_INCREMENT = 691;
	static int TOK_INDEX = 329;
	static int TOK_INNER = 327;
	static int TOK_INPUT_TYPE = 328;
	static int TOK_INSENSITIVE = 554;
	static int TOK_INSERT = 330;
	static int TOK_INSERTING = 492;
	static int TOK_INT = 342;
	static int TOK_INT128 = 692;
	static int TOK_INTEGER = 331;
	static int TOK_INTO = 332;
	static int TOK_INTRODUCER = 444;
	static int TOK_INVOKER = 693;
	static int TOK_IS = 333;
	static int TOK_ISOLATION = 334;
	static int TOK_IV = 694;
	static int TOK_JOIN = 335;
	static int TOK_KEY = 336;
	static int TOK_LAG = 633;
	static int TOK_LAST = 485;
	static int TOK_LAST_DAY = 695;
	static int TOK_LAST_VALUE = 632;
	static int TOK_LASTNAME = 594;
	static int TOK_LATERAL = 696;
	static int TOK_LEAD = 634;
	static int TOK_LEADING = 514;
	static int TOK_LEAVE = 491;
	static int TOK_LEFT = 349;
	static int TOK_LEGACY = 697;
	static int TOK_LENGTH = 348;
	static int TOK_LEQ = 350;
	static int TOK_LEVEL = 351;
	static int TOK_LIFETIME = 698;
	static int TOK_LIKE = 352;
	static int TOK_LIMBO = 521;
	static int TOK_LIMIT64_INT = 650;
	static int TOK_LIMIT64_NUMBER = 649;
	static int TOK_LINGER = 644;
	static int TOK_LIST = 555;
	static int TOK_LN = 556;
	static int TOK_LOCAL = 699;
	static int TOK_LOCALTIME = 700;
	static int TOK_LOCALTIMESTAMP = 701;
	static int TOK_LOCK = 487;
	static int TOK_LOCKED = 702;
	static int TOK_LOG = 557;
	static int TOK_LOG10 = 558;
	static int TOK_LONG = 343;
	static int TOK_LOWER = 515;
	static int TOK_LPAD = 559;
	static int TOK_LPARAM = 703;
	static int TOK_MAKE_DBKEY = 704;
	static int TOK_MANUAL = 353;
	static int TOK_MAPPING = 596;
	static int TOK_MATCHED = 560;
	static int TOK_MATCHING = 561;
	static int TOK_MAXIMUM = 354;
	static int TOK_MAXVALUE = 562;
	static int TOK_MERGE = 355;
	static int TOK_MESSAGE = 705;
	static int TOK_MIDDLENAME = 595;
	static int TOK_MILLISECOND = 563;
	static int TOK_MINIMUM = 356;
	static int TOK_MINUTE = 458;
	static int TOK_MINVALUE = 564;
	static int TOK_MOD = 565;
	static int TOK_MODE = 706;
	static int TOK_MODULE_NAME = 357;
	static int TOK_MONTH = 455;
	static int TOK_NAME = 613;
	static int TOK_NAMES = 358;
	static int TOK_NATIONAL = 359;
	static int TOK_NATIVE = 707;
	static int TOK_NATURAL = 360;
	static int TOK_NCHAR = 361;
	static int TOK_NEQ = 362;
	static int TOK_NEXT = 505;
	static int TOK_NO = 363;
	static int TOK_NORMALIZE_DECFLOAT = 709;
	static int TOK_NOT = 364;
	static int TOK_NOT_GTR = 365;
	static int TOK_NOT_GTR_LSS = 708;
	static int TOK_NOT_LSS = 366;
	static int TOK_NTH_VALUE = 631;
	static int TOK_NTILE = 710;
	static int TOK_NULL = 344;
	static int TOK_NULLIF = 481;
	static int TOK_NULLS = 484;
	static int TOK_NUM126 = 651;
	static int TOK_NUMBER = 442;
	static int TOK_NUMBER32BIT = 652;
	static int TOK_NUMBER64BIT = 467;
	static int TOK_NUMERIC = 345;
	static int TOK_OCTET_LENGTH = 516;
	static int TOK_OF = 367;
	static int TOK_OFFSET = 711;
	static int TOK_OLDEST = 712;
	static int TOK_ON = 368;
	static int TOK_ONLY = 369;
	static int TOK_OPEN = 497;
	static int TOK_OPR_EQ = 713;
	static int TOK_OPR_GTR = 714;
	static int TOK_OPR_LSS = 715;
	static int TOK_OPTION = 370;
	static int TOK_OR = 371;
	static int TOK_ORDER = 372;
	static int TOK_OS_NAME = 597;
	static int TOK_OTHERS = 716;
	static int TOK_OUTER = 373;
	static int TOK_OUTPUT_TYPE = 374;
	static int TOK_OVER = 614;
	static int TOK_OVERFLOW = 375;
	static int TOK_OVERLAY = 566;
	static int TOK_OVERRIDING = 717;
	static int TOK_PACKAGE = 615;
	static int TOK_PAD = 567;
	static int TOK_PAGE = 376;
	static int TOK_PAGE_SIZE = 378;
	static int TOK_PAGES = 377;
	static int TOK_PARAMETER = 379;
	static int TOK_PAREN_CLOSE = 718;
	static int TOK_PAREN_OPEN = 719;
	static int TOK_PARTITION = 616;
	static int TOK_PASSWORD = 380;
	static int TOK_PERCENT_RANK = 720;
	static int TOK_PI = 568;
	static int TOK_PKCS_1_5 = 721;
	static int TOK_PLACING = 569;
	static int TOK_PLAN = 381;
	static int TOK_PLUGIN = 722;
	static int TOK_POOL = 723;
	static int TOK_POSITION = 382;
	static int TOK_POST_EVENT = 383;
	static int TOK_POWER = 570;
	static int TOK_PRECEDING = 724;
	static int TOK_PRECISION = 384;
	static int TOK_PRESERVE = 571;
	static int TOK_PRIMARY = 385;
	static int TOK_PRIOR = 620;
	static int TOK_PRIVILEGE = 725;
	static int TOK_PRIVILEGES = 386;
	static int TOK_PROCEDURE = 387;
	static int TOK_PROTECTED = 388;
	static int TOK_PUBLICATION = 726;
	static int TOK_QUANTIZE = 727;
	static int TOK_RAND = 572;
	static int TOK_RANGE = 728;
	static int TOK_RANK = 635;
	static int TOK_RDB_ERROR = 729;
	static int TOK_RDB_GET_CONTEXT = 617;
	static int TOK_RDB_GET_TRANSACTION_CN = 730;
	static int TOK_RDB_RECORD_VERSION = 643;
	static int TOK_RDB_ROLE_IN_USE = 731;
	static int TOK_RDB_SET_CONTEXT = 618;
	static int TOK_RDB_SYSTEM_PRIVILEGE = 732;
	static int TOK_READ = 389;
	static int TOK_REAL = 390;
	static int TOK_RECREATE = 473;
	static int TOK_RECURSIVE = 573;
	static int TOK_REFERENCES = 391;
	static int TOK_REGR_AVGX = 733;
	static int TOK_REGR_AVGY = 734;
	static int TOK_REGR_COUNT = 735;
	static int TOK_REGR_INTERCEPT = 736;
	static int TOK_REGR_R2 = 737;
	static int TOK_REGR_SLOPE = 738;
	static int TOK_REGR_SXX = 739;
	static int TOK_REGR_SXY = 740;
	static int TOK_REGR_SYY = 741;
	static int TOK_RELATIVE = 622;
	static int TOK_RELEASE = 489;
	static int TOK_REPLACE = 574;
	static int TOK_REQUESTS = 523;
	// static int TOK_RESERVING = 742;
	static int TOK_RESERVING = 392;
	static int TOK_RESET = 743;
	static int TOK_RESETTING = 744;
	static int TOK_RESTART = 507;
	static int TOK_RESTRICT = 449;
	static int TOK_RETAIN = 393;
	static int TOK_RETURN = 626;
	static int TOK_RETURNING = 519;
	static int TOK_RETURNING_VALUES = 394;
	static int TOK_RETURNS = 395;
	static int TOK_REVERSE = 575;
	static int TOK_REVOKE = 396;
	static int TOK_RIGHT = 397;
	static int TOK_ROLE = 450;
	static int TOK_ROLLBACK = 398;
	static int TOK_ROUND = 576;
	static int TOK_ROW = 745;
	static int TOK_ROW_COUNT = 486;
	static int TOK_ROW_NUMBER = 636;
	static int TOK_ROWS = 500;
	static int TOK_RPAD = 577;
	static int TOK_RSA_DECRYPT = 746;
	static int TOK_RSA_ENCRYPT = 747;
	static int TOK_RSA_PRIVATE = 748;
	static int TOK_RSA_PUBLIC = 749;
	static int TOK_RSA_SIGN_HASH = 750;
	static int TOK_RSA_VERIFY_HASH = 751;
	static int TOK_SALT_LENGTH = 752;
	static int TOK_SAVEPOINT = 488;
	static int TOK_SCALAR_ARRAY = 503;
	static int TOK_SCALEDINT = 468;
	static int TOK_SCHEMA = 753;
	static int TOK_SCROLL = 619;
	static int TOK_SECOND = 459;
	static int TOK_SECURITY = 754;
	static int TOK_SEGMENT = 399;
	static int TOK_SELECT = 400;
	static int TOK_SENSITIVE = 578;
	static int TOK_SEQUENCE = 506;
	static int TOK_SERVERWIDE = 755;
	static int TOK_SESSION = 756;
	static int TOK_SET = 401;
	static int TOK_SHADOW = 402;
	static int TOK_SHARED = 403;
	static int TOK_SIGN = 579;
	static int TOK_SIGNATURE = 757;
	static int TOK_SIMILAR = 598;
	static int TOK_SIN = 580;
	static int TOK_SINGULAR = 404;
	static int TOK_SINH = 581;
	static int TOK_SIZE = 405;
	static int TOK_SKIP = 476;
	static int TOK_SMALLINT = 406;
	static int TOK_SNAPSHOT = 407;
	static int TOK_SOME = 408;
	static int TOK_SORT = 409;
	static int TOK_SOURCE = 603;
	static int TOK_SPACE = 582;
	static int TOK_SQL = 758;
	static int TOK_SQLCODE = 410;
	static int TOK_SQLSTATE = 637;
	static int TOK_SQRT = 583;
	static int TOK_STABILITY = 411;
	static int TOK_START = 584;
	static int TOK_STARTING = 412;
	static int TOK_STARTS = 412;
	static int TOK_STATEMENT = 490;
	static int TOK_STATISTICS = 413;
	static int TOK_STDDEV_POP = 759;
	static int TOK_STDDEV_SAMP = 760;
	static int TOK_STRING = 443;
	static int TOK_SUB_TYPE = 414;
	static int TOK_SUBSTRING = 472;
	static int TOK_SUM = 416;
	static int TOK_SUSPEND = 415;
	static int TOK_SYMBOL = 441;
	static int TOK_SYSTEM = 761;
	static int TOK_TABLE = 417;
	static int TOK_TAGS = 645;
	static int TOK_TAN = 585;
	static int TOK_TANH = 586;
	static int TOK_TARGET = 762;
	static int TOK_TEMPORARY = 587;
	static int TOK_THEN = 418;
	static int TOK_TIES = 763;
	static int TOK_TIME = 462;
	static int TOK_TIMEOUT = 524;
	static int TOK_TIMESTAMP = 463;
	static int TOK_TIMEZONE_HOUR = 764;
	static int TOK_TIMEZONE_MINUTE = 765;
	static int TOK_TIMEZONE_NAME = 766;
	static int TOK_TO = 419;
	static int TOK_TOTALORDER = 767;
	static int TOK_TRAILING = 517;
	static int TOK_TRANSACTION = 420;
	static int TOK_TRAPS = 768;
	static int TOK_TRIGGER = 421;
	static int TOK_TRIM = 518;
	static int TOK_TRUE = 640;
	static int TOK_TRUNC = 588;
	static int TOK_TRUSTED = 769;
	static int TOK_TWO_PHASE = 604;
	static int TOK_TYPE = 452;
	static int TOK_UMINUS = 646;
	static int TOK_UNBOUNDED = 770;
	static int TOK_UNCOMMITTED = 422;
	static int TOK_UNDO = 522;
	static int TOK_UNICODE_CHAR = 771;
	static int TOK_UNICODE_VAL = 772;
	static int TOK_UNION = 423;
	static int TOK_UNIQUE = 424;
	static int TOK_UNKNOWN = 641;
	static int TOK_UPDATE = 425;
	static int TOK_UPDATING = 493;
	static int TOK_UPLUS = 647;
	static int TOK_UPPER = 346;
	static int TOK_USAGE = 642;
	static int TOK_USER = 426;
	static int TOK_USING = 483;
	static int TOK_UUID_TO_CHAR = 599;
	static int TOK_VALUE = 347;
	static int TOK_VALUES = 427;
	static int TOK_VAR_POP = 773;
	static int TOK_VAR_SAMP = 774;
	static int TOK_VARBINARY = 775;
	static int TOK_VARCHAR = 428;
	static int TOK_VARIABLE = 429;
	static int TOK_VARYING = 430;
	static int TOK_VERSION = 431;
	static int TOK_VIEW = 432;
	static int TOK_VOID = 776;
	static int TOK_WAIT = 433;
	static int TOK_WEEK = 589;
	static int TOK_WEEKDAY = 460;
	static int TOK_WHEN = 434;
	static int TOK_WHERE = 435;
	static int TOK_WHILE = 436;
	static int TOK_WINDOW = 777;
	static int TOK_WITH = 437;
	static int TOK_WITHOUT = 778;
	static int TOK_WORK = 438;
	static int TOK_WRITE = 439;
	static int TOK_YEAR = 454;
	static int TOK_YEARDAY = 461;
	static int TOK_YYERRCODE = 256;
	static int TOK_ZONE = 779;


};


ref class Values abstract sealed
{

public:

	static SysStr^ TOK_ABS = "ABS";
	static SysStr^ TOK_ABSOLUTE = "ABSOLUTE";
	static SysStr^ TOK_ACCENT = "ACCENT";
	static SysStr^ TOK_ACOS = "ACOS";
	static SysStr^ TOK_ACOSH = "ACOSH";
	static SysStr^ TOK_ACTION = "ACTION";
	static SysStr^ TOK_ACTIVE = "ACTIVE";
	static SysStr^ TOK_ADD = "ADD";
	static SysStr^ TOK_ADMIN = "ADMIN";
	static SysStr^ TOK_AFTER = "AFTER";
	static SysStr^ TOK_ALL = "ALL";
	static SysStr^ TOK_ALTER = "ALTER";
	static SysStr^ TOK_ALWAYS = "ALWAYS";
	static SysStr^ TOK_AND = "AND";
	static SysStr^ TOK_ANY = "ANY";
	static SysStr^ TOK_AS = "AS";
	static SysStr^ TOK_ASC = "ASC";
	static SysStr^ TOK_ASCENDING = "ASCENDING";
	static SysStr^ TOK_ASCII_CHAR = "ASCII_CHAR";
	static SysStr^ TOK_ASCII_VAL = "ASCII_VAL";
	static SysStr^ TOK_ASIN = "ASIN";
	static SysStr^ TOK_ASINH = "ASINH";
	static SysStr^ TOK_AT = "AT";
	static SysStr^ TOK_ATAN = "ATAN";
	static SysStr^ TOK_ATAN2 = "ATAN2";
	static SysStr^ TOK_ATANH = "ATANH";
	static SysStr^ TOK_AUTO = "AUTO";
	static SysStr^ TOK_AUTONOMOUS = "AUTONOMOUS";
	static SysStr^ TOK_AVG = "AVG";
	static SysStr^ TOK_BACKUP = "BACKUP";
	static SysStr^ TOK_BASE64_DECODE = "BASE64_DECODE";
	static SysStr^ TOK_BASE64_ENCODE = "BASE64_ENCODE";
	static SysStr^ TOK_BEFORE = "BEFORE";
	static SysStr^ TOK_BEGIN = "BEGIN";
	static SysStr^ TOK_BETWEEN = "BETWEEN";
	static SysStr^ TOK_BIGINT = "BIGINT";
	static SysStr^ TOK_BIN_AND = "BIN_AND";
	static SysStr^ TOK_BIN_COMPLEMENT_GTR = "~>";
	static SysStr^ TOK_BIN_COMPLIMENT_LSS = "~<";
	static SysStr^ TOK_BIN_NOT = "BIN_NOT";
	static SysStr^ TOK_BIN_OPR_COMPLEMENT = "~=";
	static SysStr^ TOK_BIN_OPR_XOR = "^=";
	static SysStr^ TOK_BIN_OR = "BIN_OR";
	static SysStr^ TOK_BIN_SHL = "BIN_SHL";
	static SysStr^ TOK_BIN_SHR = "BIN_SHR";
	static SysStr^ TOK_BIN_XOR = "BIN_XOR";
	static SysStr^ TOK_BIN_XOR_GTR = "^>";
	static SysStr^ TOK_BIN_XOR_LSS = "^<";
	static SysStr^ TOK_BINARY = "BINARY";
	static SysStr^ TOK_BIND = "BIND";
	static SysStr^ TOK_BIND_PARAM = ":=";
	static SysStr^ TOK_BIT_LENGTH = "BIT_LENGTH";
	static SysStr^ TOK_BLOB = "BLOB";
	static SysStr^ TOK_BLOB_APPEND = "BLOB_APPEND";
	static SysStr^ TOK_BLOCK = "BLOCK";
	static SysStr^ TOK_BODY = "BODY";
	static SysStr^ TOK_BOOLEAN = "BOOLEAN";
	static SysStr^ TOK_BOTH = "BOTH";
	static SysStr^ TOK_BREAK = "BREAK";
	static SysStr^ TOK_BY = "BY";
	static SysStr^ TOK_CALLER = "CALLER";
	static SysStr^ TOK_CASCADE = "CASCADE";
	static SysStr^ TOK_CASE = "CASE";
	static SysStr^ TOK_CAST = "CAST";
	static SysStr^ TOK_CEIL = "CEIL";
	static SysStr^ TOK_CEILING = "CEILING";
	static SysStr^ TOK_CHAR = "CHAR";
	static SysStr^ TOK_CHAR_LENGTH = "CHAR_LENGTH";
	static SysStr^ TOK_CHAR_TO_UUID = "CHAR_TO_UUID";
	static SysStr^ TOK_CHARACTER = "CHARACTER";
	static SysStr^ TOK_CHARACTER_LENGTH = "CHARACTER_LENGTH";
	static SysStr^ TOK_CHECK = "CHECK";
	static SysStr^ TOK_CLEAR = "CLEAR";
	static SysStr^ TOK_CLOSE = "CLOSE";
	static SysStr^ TOK_COALESCE = "COALESCE";
	static SysStr^ TOK_COLLATE = "COLLATE";
	static SysStr^ TOK_COLLATION = "COLLATION";
	static SysStr^ TOK_COLUMN = "COLUMN";
	static SysStr^ TOK_COMMA = ",";
	static SysStr^ TOK_COMMENT = "COMMENT";
	static SysStr^ TOK_COMMIT = "COMMIT";
	static SysStr^ TOK_COMMITTED = "COMMITTED";
	static SysStr^ TOK_COMMON = "COMMON";
	static SysStr^ TOK_COMPARE_DECFLOAT = "COMPARE_DECFLOAT";
	static SysStr^ TOK_COMPUTED = "COMPUTED";
	static SysStr^ TOK_CONCATENATE = "||";
	static SysStr^ TOK_CONDITIONAL = "CONDITIONAL";
	static SysStr^ TOK_CONNECT = "CONNECT";
	static SysStr^ TOK_CONNECTIONS = "CONNECTIONS";
	static SysStr^ TOK_CONSISTENCY = "CONSISTENCY";
	static SysStr^ TOK_CONSTRAINT = "CONSTRAINT";
	static SysStr^ TOK_CONTAINING = "CONTAINING";
	static SysStr^ TOK_CONTINUE = "CONTINUE";
	static SysStr^ TOK_CORR = "CORR";
	static SysStr^ TOK_COS = "COS";
	static SysStr^ TOK_COSH = "COSH";
	static SysStr^ TOK_COT = "COT";
	static SysStr^ TOK_COUNT = "COUNT";
	static SysStr^ TOK_COUNTER = "COUNTER";
	static SysStr^ TOK_COVAR_POP = "COVAR_POP";
	static SysStr^ TOK_COVAR_SAMP = "COVAR_SAMP";
	static SysStr^ TOK_CREATE = "CREATE";
	static SysStr^ TOK_CROSS = "CROSS";
	static SysStr^ TOK_CRYPT_HASH = "CRYPT_HASH";
	static SysStr^ TOK_CSTRING = "CSTRING";
	static SysStr^ TOK_CTR_BIG_ENDIAN = "CTR_BIG_ENDIAN";
	static SysStr^ TOK_CTR_LENGTH = "CTR_LENGTH";
	static SysStr^ TOK_CTR_LITTLE_ENDIAN = "CTR_LITTLE_ENDIAN";
	static SysStr^ TOK_CUME_DIST = "CUME_DIST";
	static SysStr^ TOK_CURRENT = "CURRENT";
	static SysStr^ TOK_CURRENT_CONNECTION = "CURRENT_CONNECTION";
	static SysStr^ TOK_CURRENT_DATE = "CURRENT_DATE";
	static SysStr^ TOK_CURRENT_ROLE = "CURRENT_ROLE";
	static SysStr^ TOK_CURRENT_TIME = "CURRENT_TIME";
	static SysStr^ TOK_CURRENT_TIMESTAMP = "CURRENT_TIMESTAMP";
	static SysStr^ TOK_CURRENT_TRANSACTION = "CURRENT_TRANSACTION";
	static SysStr^ TOK_CURRENT_USER = "CURRENT_USER";
	static SysStr^ TOK_CURSOR = "CURSOR";
	static SysStr^ TOK_DATA = "DATA";
	static SysStr^ TOK_DATABASE = "DATABASE";
	static SysStr^ TOK_DATE = "DATE";
	static SysStr^ TOK_DATEADD = "DATEADD";
	static SysStr^ TOK_DATEDIFF = "DATEDIFF";
	static SysStr^ TOK_DAY = "DAY";
	static SysStr^ TOK_DB_KEY = "RDB$DB_KEY";
	static SysStr^ TOK_DDL = "DDL";
	static SysStr^ TOK_DEBUG = "DEBUG";
	static SysStr^ TOK_DEC = "DEC";
	static SysStr^ TOK_DECFLOAT = "DECFLOAT";
	static SysStr^ TOK_DECIMAL = "DECIMAL";
	static SysStr^ TOK_DECIMAL_NUMBER = "DECIMAL_NUMBER";
	static SysStr^ TOK_DECLARE = "DECLARE";
	static SysStr^ TOK_DECODE = "DECODE";
	static SysStr^ TOK_DECRYPT = "DECRYPT";
	static SysStr^ TOK_DEFAULT = "DEFAULT";
	static SysStr^ TOK_DEFINER = "DEFINER";
	static SysStr^ TOK_DELETE = "DELETE";
	static SysStr^ TOK_DELETING = "DELETING";
	static SysStr^ TOK_DENSE_RANK = "DENSE_RANK";
	static SysStr^ TOK_DESC = "DESC";
	static SysStr^ TOK_DESCENDING = "DESCENDING";
	static SysStr^ TOK_DESCRIPTOR = "DESCRIPTOR";
	static SysStr^ TOK_DETERMINISTIC = "DETERMINISTIC";
	static SysStr^ TOK_DIFFERENCE = "DIFFERENCE";
	static SysStr^ TOK_DISABLE = "DISABLE";
	static SysStr^ TOK_DISCONNECT = "DISCONNECT";
	static SysStr^ TOK_DISTINCT = "DISTINCT";
	static SysStr^ TOK_DO = "DO";
	static SysStr^ TOK_DOMAIN = "DOMAIN";
	static SysStr^ TOK_DOUBLE = "DOUBLE";
	static SysStr^ TOK_DROP = "DROP";
	static SysStr^ TOK_ELSE = "ELSE";
	static SysStr^ TOK_ENABLE = "ENABLE";
	static SysStr^ TOK_ENCRYPT = "ENCRYPT";
	static SysStr^ TOK_END = "END";
	static SysStr^ TOK_ENGINE = "ENGINE";
	static SysStr^ TOK_ENTRY_POINT = "ENTRY_POINT";
	static SysStr^ TOK_ESCAPE = "ESCAPE";
	static SysStr^ TOK_EXCEPTION = "EXCEPTION";
	static SysStr^ TOK_EXCESS = "EXCESS";
	static SysStr^ TOK_EXCLUDE = "EXCLUDE";
	static SysStr^ TOK_EXECUTE = "EXECUTE";
	static SysStr^ TOK_EXISTS = "EXISTS";
	static SysStr^ TOK_EXIT = "EXIT";
	static SysStr^ TOK_EXP = "EXP";
	static SysStr^ TOK_EXTENDED = "EXTENDED";
	static SysStr^ TOK_EXTERNAL = "EXTERNAL";
	static SysStr^ TOK_EXTRACT = "EXTRACT";
	static SysStr^ TOK_FALSE = "FALSE";
	static SysStr^ TOK_FETCH = "FETCH";
	static SysStr^ TOK_FILE = "FILE";
	static SysStr^ TOK_FILTER = "FILTER";
	static SysStr^ TOK_FIRST = "FIRST";
	static SysStr^ TOK_FIRST_DAY = "FIRST_DAY";
	static SysStr^ TOK_FIRST_VALUE = "FIRST_VALUE";
	static SysStr^ TOK_FIRSTNAME = "FIRSTNAME";
	static SysStr^ TOK_FLOAT = "FLOAT";
	static SysStr^ TOK_FLOAT_NUMBER = "FLOAT_NUMBER";
	static SysStr^ TOK_FLOOR = "FLOOR";
	static SysStr^ TOK_FOLLOWING = "FOLLOWING";
	static SysStr^ TOK_FOR = "FOR";
	static SysStr^ TOK_FOREIGN = "FOREIGN";
	static SysStr^ TOK_FREE_IT = "FREE_IT";
	static SysStr^ TOK_FROM = "FROM";
	static SysStr^ TOK_FULL = "FULL";
	static SysStr^ TOK_FUNCTION = "FUNCTION";
	static SysStr^ TOK_GDSCODE = "GDSCODE";
	static SysStr^ TOK_GEN_ID = "GEN_ID";
	static SysStr^ TOK_GEN_UUID = "GEN_UUID";
	static SysStr^ TOK_GENERATED = "GENERATED";
	static SysStr^ TOK_GENERATOR = "GENERATOR";
	static SysStr^ TOK_GEQ = ">=";
	static SysStr^ TOK_GLOBAL = "GLOBAL";
	static SysStr^ TOK_GRANT = "GRANT";
	static SysStr^ TOK_GRANTED = "GRANTED";
	static SysStr^ TOK_GROUP = "GROUP";
	static SysStr^ TOK_HASH = "HASH";
	static SysStr^ TOK_HAVING = "HAVING";
	static SysStr^ TOK_HEX_DECODE = "HEX_DECODE";
	static SysStr^ TOK_HEX_ENCODE = "HEX_ENCODE";
	static SysStr^ TOK_HOUR = "HOUR";
	static SysStr^ TOK_IDENTITY = "IDENTITY";
	static SysStr^ TOK_IDLE = "IDLE";
	static SysStr^ TOK_IF = "IF";
	static SysStr^ TOK_IGNORE = "IGNORE";
	static SysStr^ TOK_IIF = "IIF";
	static SysStr^ TOK_IN = "IN";
	static SysStr^ TOK_INACTIVE = "INACTIVE";
	static SysStr^ TOK_INCLUDE = "INCLUDE";
	static SysStr^ TOK_INCREMENT = "INCREMENT";
	static SysStr^ TOK_INDEX = "INDEX";
	static SysStr^ TOK_INNER = "INNER";
	static SysStr^ TOK_INPUT_TYPE = "INPUT_TYPE";
	static SysStr^ TOK_INSENSITIVE = "INSENSITIVE";
	static SysStr^ TOK_INSERT = "INSERT";
	static SysStr^ TOK_INSERTING = "INSERTING";
	static SysStr^ TOK_INT = "INT";
	static SysStr^ TOK_INT128 = "INT128";
	static SysStr^ TOK_INTEGER = "INTEGER";
	static SysStr^ TOK_INTO = "INTO";
	static SysStr^ TOK_INTRODUCER = "INTRODUCER";
	static SysStr^ TOK_INVOKER = "INVOKER";
	static SysStr^ TOK_IS = "IS";
	static SysStr^ TOK_ISOLATION = "ISOLATION";
	static SysStr^ TOK_IV = "IV";
	static SysStr^ TOK_JOIN = "JOIN";
	static SysStr^ TOK_KEY = "KEY";
	static SysStr^ TOK_LAG = "LAG";
	static SysStr^ TOK_LAST = "LAST";
	static SysStr^ TOK_LAST_DAY = "LAST_DAY";
	static SysStr^ TOK_LAST_VALUE = "LAST_VALUE";
	static SysStr^ TOK_LASTNAME = "LASTNAME";
	static SysStr^ TOK_LATERAL = "LATERAL";
	static SysStr^ TOK_LEAD = "LEAD";
	static SysStr^ TOK_LEADING = "LEADING";
	static SysStr^ TOK_LEAVE = "LEAVE";
	static SysStr^ TOK_LEFT = "LEFT";
	static SysStr^ TOK_LEGACY = "LEGACY";
	static SysStr^ TOK_LENGTH = "LENGTH";
	static SysStr^ TOK_LEQ = "<=";
	static SysStr^ TOK_LEVEL = "LEVEL";
	static SysStr^ TOK_LIFETIME = "LIFETIME";
	static SysStr^ TOK_LIKE = "LIKE";
	static SysStr^ TOK_LIMBO = "LIMBO";
	static SysStr^ TOK_LIMIT64_INT = "TOK_LIMIT64_INT";
	static SysStr^ TOK_LIMIT64_NUMBER = "TOK_LIMIT64_NUMBER";
	static SysStr^ TOK_LINGER = "LINGER";
	static SysStr^ TOK_LIST = "LIST";
	static SysStr^ TOK_LN = "LN";
	static SysStr^ TOK_LOCAL = "LOCAL";
	static SysStr^ TOK_LOCALTIME = "LOCALTIME";
	static SysStr^ TOK_LOCALTIMESTAMP = "LOCALTIMESTAMP";
	static SysStr^ TOK_LOCK = "LOCK";
	static SysStr^ TOK_LOCKED = "LOCKED";
	static SysStr^ TOK_LOG = "LOG";
	static SysStr^ TOK_LOG10 = "LOG10";
	static SysStr^ TOK_LONG = "LONG";
	static SysStr^ TOK_LOWER = "LOWER";
	static SysStr^ TOK_LPAD = "LPAD";
	static SysStr^ TOK_LPARAM = "LPARAM";
	static SysStr^ TOK_MAKE_DBKEY = "MAKE_DBKEY";
	static SysStr^ TOK_MANUAL = "MANUAL";
	static SysStr^ TOK_MAPPING = "MAPPING";
	static SysStr^ TOK_MATCHED = "MATCHED";
	static SysStr^ TOK_MATCHING = "MATCHING";
	static SysStr^ TOK_MAXIMUM = "MAX";
	static SysStr^ TOK_MAXVALUE = "MAXVALUE";
	static SysStr^ TOK_MERGE = "MERGE";
	static SysStr^ TOK_MESSAGE = "MESSAGE";
	static SysStr^ TOK_MIDDLENAME = "MIDDLENAME";
	static SysStr^ TOK_MILLISECOND = "MILLISECOND";
	static SysStr^ TOK_MINIMUM = "MIN";
	static SysStr^ TOK_MINUTE = "MINUTE";
	static SysStr^ TOK_MINVALUE = "MINVALUE";
	static SysStr^ TOK_MOD = "MOD";
	static SysStr^ TOK_MODE = "MODE";
	static SysStr^ TOK_MODULE_NAME = "MODULE_NAME";
	static SysStr^ TOK_MONTH = "MONTH";
	static SysStr^ TOK_NAME = "NAME";
	static SysStr^ TOK_NAMES = "NAMES";
	static SysStr^ TOK_NATIONAL = "NATIONAL";
	static SysStr^ TOK_NATIVE = "NATIVE";
	static SysStr^ TOK_NATURAL = "NATURAL";
	static SysStr^ TOK_NCHAR = "NCHAR";
	static SysStr^ TOK_NEQ = "!=";
	static SysStr^ TOK_NEXT = "NEXT";
	static SysStr^ TOK_NO = "NO";
	static SysStr^ TOK_NORMALIZE_DECFLOAT = "NORMALIZE_DECFLOAT";
	static SysStr^ TOK_NOT = "NOT";
	static SysStr^ TOK_NOT_GTR = "!>";
	static SysStr^ TOK_NOT_GTR_LSS = "<>";
	static SysStr^ TOK_NOT_LSS = "!<";
	static SysStr^ TOK_NTH_VALUE = "NTH_VALUE";
	static SysStr^ TOK_NTILE = "NTILE";
	static SysStr^ TOK_NULL = "NULL";
	static SysStr^ TOK_NULLIF = "NULLIF";
	static SysStr^ TOK_NULLS = "NULLS";
	static SysStr^ TOK_NUM126 = "NUM128";
	static SysStr^ TOK_NUMBER = "NUMBER";
	static SysStr^ TOK_NUMBER32BIT = "NUMBER32BIT";
	static SysStr^ TOK_NUMBER64BIT = "NUMBER64BIT";
	static SysStr^ TOK_NUMERIC = "NUMERIC";
	static SysStr^ TOK_OCTET_LENGTH = "OCTET_LENGTH";
	static SysStr^ TOK_OF = "OF";
	static SysStr^ TOK_OFFSET = "OFFSET";
	static SysStr^ TOK_OLDEST = "OLDEST";
	static SysStr^ TOK_ON = "ON";
	static SysStr^ TOK_ONLY = "ONLY";
	static SysStr^ TOK_OPEN = "OPEN";
	static SysStr^ TOK_OPR_EQ = "=";
	static SysStr^ TOK_OPR_GTR = ">";
	static SysStr^ TOK_OPR_LSS = "<";
	static SysStr^ TOK_OPTION = "OPTION";
	static SysStr^ TOK_OR = "OR";
	static SysStr^ TOK_ORDER = "ORDER";
	static SysStr^ TOK_OS_NAME = "OS_NAME";
	static SysStr^ TOK_OTHERS = "OTHERS";
	static SysStr^ TOK_OUTER = "OUTER";
	static SysStr^ TOK_OUTPUT_TYPE = "OUTPUT_TYPE";
	static SysStr^ TOK_OVER = "OVER";
	static SysStr^ TOK_OVERFLOW = "OVERFLOW";
	static SysStr^ TOK_OVERLAY = "OVERLAY";
	static SysStr^ TOK_OVERRIDING = "OVERRIDING";
	static SysStr^ TOK_PACKAGE = "PACKAGE";
	static SysStr^ TOK_PAD = "PAD";
	static SysStr^ TOK_PAGE = "PAGE";
	static SysStr^ TOK_PAGE_SIZE = "PAGE_SIZE";
	static SysStr^ TOK_PAGES = "PAGES";
	static SysStr^ TOK_PARAMETER = "PARAMETER";
	static SysStr^ TOK_PAREN_CLOSE = ")";
	static SysStr^ TOK_PAREN_OPEN = "(";
	static SysStr^ TOK_PARTITION = "PARTITION";
	static SysStr^ TOK_PASSWORD = "PASSWORD";
	static SysStr^ TOK_PERCENT_RANK = "PERCENT_RANK";
	static SysStr^ TOK_PI = "PI";
	static SysStr^ TOK_PKCS_1_5 = "PKCS_1_5";
	static SysStr^ TOK_PLACING = "PLACING";
	static SysStr^ TOK_PLAN = "PLAN";
	static SysStr^ TOK_PLUGIN = "PLUGIN";
	static SysStr^ TOK_POOL = "POOL";
	static SysStr^ TOK_POSITION = "POSITION";
	static SysStr^ TOK_POST_EVENT = "POST_EVENT";
	static SysStr^ TOK_POWER = "POWER";
	static SysStr^ TOK_PRECEDING = "PRECEDING";
	static SysStr^ TOK_PRECISION = "PRECISION";
	static SysStr^ TOK_PRESERVE = "PRESERVE";
	static SysStr^ TOK_PRIMARY = "PRIMARY";
	static SysStr^ TOK_PRIOR = "PRIOR";
	static SysStr^ TOK_PRIVILEGE = "PRIVILEGE";
	static SysStr^ TOK_PRIVILEGES = "PRIVILEGES";
	static SysStr^ TOK_PROCEDURE = "PROCEDURE";
	static SysStr^ TOK_PROTECTED = "PROTECTED";
	static SysStr^ TOK_PUBLICATION = "PUBLICATION";
	static SysStr^ TOK_QUANTIZE = "QUANTIZE";
	static SysStr^ TOK_RAND = "RAND";
	static SysStr^ TOK_RANGE = "RANGE";
	static SysStr^ TOK_RANK = "RANK";
	static SysStr^ TOK_RDB_ERROR = "RDB$ERROR";
	static SysStr^ TOK_RDB_GET_CONTEXT = "RDB$GET_CONTEXT";
	static SysStr^ TOK_RDB_GET_TRANSACTION_CN = "RDB$GET_TRANSACTION_CN";
	static SysStr^ TOK_RDB_RECORD_VERSION = "RDB$RECORD_VERSION";
	static SysStr^ TOK_RDB_ROLE_IN_USE = "RDB$ROLE_IN_USE";
	static SysStr^ TOK_RDB_SET_CONTEXT = "RDB$SET_CONTEXT";
	static SysStr^ TOK_RDB_SYSTEM_PRIVILEGE = "RDB$SYSTEM_PRIVILEGE";
	static SysStr^ TOK_READ = "READ";
	static SysStr^ TOK_REAL = "REAL";
	static SysStr^ TOK_RECREATE = "RECREATE";
	static SysStr^ TOK_RECURSIVE = "RECURSIVE";
	static SysStr^ TOK_REFERENCES = "REFERENCES";
	static SysStr^ TOK_REGR_AVGX = "REGR_AVGX";
	static SysStr^ TOK_REGR_AVGY = "REGR_AVGY";
	static SysStr^ TOK_REGR_COUNT = "REGR_COUNT";
	static SysStr^ TOK_REGR_INTERCEPT = "REGR_INTERCEPT";
	static SysStr^ TOK_REGR_R2 = "REGR_R2";
	static SysStr^ TOK_REGR_SLOPE = "REGR_SLOPE";
	static SysStr^ TOK_REGR_SXX = "REGR_SXX";
	static SysStr^ TOK_REGR_SXY = "REGR_SXY";
	static SysStr^ TOK_REGR_SYY = "REGR_SYY";
	static SysStr^ TOK_RELATIVE = "RELATIVE";
	static SysStr^ TOK_RELEASE = "RELEASE";
	static SysStr^ TOK_REPLACE = "REPLACE";
	static SysStr^ TOK_REQUESTS = "REQUESTS";
	static SysStr^ TOK_RESERVING = "RESERV";
	// static SysStr^ TOK_RESERVING = "RESERVING";
	static SysStr^ TOK_RESET = "RESET";
	static SysStr^ TOK_RESETTING = "RESETTING";
	static SysStr^ TOK_RESTART = "RESTART";
	static SysStr^ TOK_RESTRICT = "RESTRICT";
	static SysStr^ TOK_RETAIN = "RETAIN";
	static SysStr^ TOK_RETURN = "RETURN";
	static SysStr^ TOK_RETURNING = "RETURNING";
	static SysStr^ TOK_RETURNING_VALUES = "RETURNING_VALUES";
	static SysStr^ TOK_RETURNS = "RETURNS";
	static SysStr^ TOK_REVERSE = "REVERSE";
	static SysStr^ TOK_REVOKE = "REVOKE";
	static SysStr^ TOK_RIGHT = "RIGHT";
	static SysStr^ TOK_ROLE = "ROLE";
	static SysStr^ TOK_ROLLBACK = "ROLLBACK";
	static SysStr^ TOK_ROUND = "ROUND";
	static SysStr^ TOK_ROW = "ROW";
	static SysStr^ TOK_ROW_COUNT = "ROW_COUNT";
	static SysStr^ TOK_ROW_NUMBER = "ROW_NUMBER";
	static SysStr^ TOK_ROWS = "ROWS";
	static SysStr^ TOK_RPAD = "RPAD";
	static SysStr^ TOK_RSA_DECRYPT = "RSA_DECRYPT";
	static SysStr^ TOK_RSA_ENCRYPT = "RSA_ENCRYPT";
	static SysStr^ TOK_RSA_PRIVATE = "RSA_PRIVATE";
	static SysStr^ TOK_RSA_PUBLIC = "RSA_PUBLIC";
	static SysStr^ TOK_RSA_SIGN_HASH = "RSA_SIGN_HASH";
	static SysStr^ TOK_RSA_VERIFY_HASH = "RSA_VERIFY_HASH";
	static SysStr^ TOK_SALT_LENGTH = "SALT_LENGTH";
	static SysStr^ TOK_SAVEPOINT = "SAVEPOINT";
	static SysStr^ TOK_SCALAR_ARRAY = "SCALAR_ARRAY";
	static SysStr^ TOK_SCALEDINT = "SCALEDINT";
	static SysStr^ TOK_SCHEMA = "SCHEMA";
	static SysStr^ TOK_SCROLL = "SCROLL";
	static SysStr^ TOK_SECOND = "SECOND";
	static SysStr^ TOK_SECURITY = "SECURITY";
	static SysStr^ TOK_SEGMENT = "SEGMENT";
	static SysStr^ TOK_SELECT = "SELECT";
	static SysStr^ TOK_SENSITIVE = "SENSITIVE";
	static SysStr^ TOK_SEQUENCE = "SEQUENCE";
	static SysStr^ TOK_SERVERWIDE = "SERVERWIDE";
	static SysStr^ TOK_SESSION = "SESSION";
	static SysStr^ TOK_SET = "SET";
	static SysStr^ TOK_SHADOW = "SHADOW";
	static SysStr^ TOK_SHARED = "SHARED";
	static SysStr^ TOK_SIGN = "SIGN";
	static SysStr^ TOK_SIGNATURE = "SIGNATURE";
	static SysStr^ TOK_SIMILAR = "SIMILAR";
	static SysStr^ TOK_SIN = "SIN";
	static SysStr^ TOK_SINGULAR = "SINGULAR";
	static SysStr^ TOK_SINH = "SINH";
	static SysStr^ TOK_SIZE = "SIZE";
	static SysStr^ TOK_SKIP = "SKIP";
	static SysStr^ TOK_SMALLINT = "SMALLINT";
	static SysStr^ TOK_SNAPSHOT = "SNAPSHOT";
	static SysStr^ TOK_SOME = "SOME";
	static SysStr^ TOK_SORT = "SORT";
	static SysStr^ TOK_SOURCE = "SOURCE";
	static SysStr^ TOK_SPACE = "SPACE";
	static SysStr^ TOK_SQL = "SQL";
	static SysStr^ TOK_SQLCODE = "SQLCODE";
	static SysStr^ TOK_SQLSTATE = "SQLSTATE";
	static SysStr^ TOK_SQRT = "SQRT";
	static SysStr^ TOK_STABILITY = "STABILITY";
	static SysStr^ TOK_START = "START";
	static SysStr^ TOK_STARTING = "STARTING";
	static SysStr^ TOK_STARTS = "STARTS";
	static SysStr^ TOK_STATEMENT = "STATEMENT";
	static SysStr^ TOK_STATISTICS = "STATISTICS";
	static SysStr^ TOK_STDDEV_POP = "STDDEV_POP";
	static SysStr^ TOK_STDDEV_SAMP = "STDDEV_SAMP";
	static SysStr^ TOK_STRING = "STRING";
	static SysStr^ TOK_SUB_TYPE = "SUB_TYPE";
	static SysStr^ TOK_SUBSTRING = "SUBSTRING";
	static SysStr^ TOK_SUM = "SUM";
	static SysStr^ TOK_SUSPEND = "SUSPEND";
	static SysStr^ TOK_SYMBOL = "SYMBOL";
	static SysStr^ TOK_SYSTEM = "SYSTEM";
	static SysStr^ TOK_TABLE = "TABLE";
	static SysStr^ TOK_TAGS = "TAGS";
	static SysStr^ TOK_TAN = "TAN";
	static SysStr^ TOK_TANH = "TANH";
	static SysStr^ TOK_TARGET = "TARGET";
	static SysStr^ TOK_TEMPORARY = "TEMPORARY";
	static SysStr^ TOK_THEN = "THEN";
	static SysStr^ TOK_TIES = "TIES";
	static SysStr^ TOK_TIME = "TIME";
	static SysStr^ TOK_TIMEOUT = "TIMEOUT";
	static SysStr^ TOK_TIMESTAMP = "TIMESTAMP";
	static SysStr^ TOK_TIMEZONE_HOUR = "TIMEZONE_HOUR";
	static SysStr^ TOK_TIMEZONE_MINUTE = "TIMEZONE_MINUTE";
	static SysStr^ TOK_TIMEZONE_NAME = "TIMEZONE_NAME";
	static SysStr^ TOK_TO = "TO";
	static SysStr^ TOK_TOTALORDER = "TOTALORDER";
	static SysStr^ TOK_TRAILING = "TRAILING";
	static SysStr^ TOK_TRANSACTION = "TRANSACTION";
	static SysStr^ TOK_TRAPS = "TRAPS";
	static SysStr^ TOK_TRIGGER = "TRIGGER";
	static SysStr^ TOK_TRIM = "TRIM";
	static SysStr^ TOK_TRUE = "TRUE";
	static SysStr^ TOK_TRUNC = "TRUNC";
	static SysStr^ TOK_TRUSTED = "TRUSTED";
	static SysStr^ TOK_TWO_PHASE = "TWO_PHASE";
	static SysStr^ TOK_TYPE = "TYPE";
	static SysStr^ TOK_UMINUS = "UMINUS";
	static SysStr^ TOK_UNBOUNDED = "UNBOUNDED";
	static SysStr^ TOK_UNCOMMITTED = "UNCOMMITTED";
	static SysStr^ TOK_UNDO = "UNDO";
	static SysStr^ TOK_UNICODE_CHAR = "UNICODE_CHAR";
	static SysStr^ TOK_UNICODE_VAL = "UNICODE_VAL";
	static SysStr^ TOK_UNION = "UNION";
	static SysStr^ TOK_UNIQUE = "UNIQUE";
	static SysStr^ TOK_UNKNOWN = "UNKNOWN";
	static SysStr^ TOK_UPDATE = "UPDATE";
	static SysStr^ TOK_UPDATING = "UPDATING";
	static SysStr^ TOK_UPLUS = "UPLUS";
	static SysStr^ TOK_UPPER = "UPPER";
	static SysStr^ TOK_USAGE = "USAGE";
	static SysStr^ TOK_USER = "USER";
	static SysStr^ TOK_USING = "USING";
	static SysStr^ TOK_UUID_TO_CHAR = "UUID_TO_CHAR";
	static SysStr^ TOK_VALUE = "VALUE";
	static SysStr^ TOK_VALUES = "VALUES";
	static SysStr^ TOK_VAR_POP = "VAR_POP";
	static SysStr^ TOK_VAR_SAMP = "VAR_SAMP";
	static SysStr^ TOK_VARBINARY = "VARBINARY";
	static SysStr^ TOK_VARCHAR = "VARCHAR";
	static SysStr^ TOK_VARIABLE = "VARIABLE";
	static SysStr^ TOK_VARYING = "VARYING";
	static SysStr^ TOK_VERSION = "RECORD_VERSION";
	static SysStr^ TOK_VIEW = "VIEW";
	static SysStr^ TOK_VOID = nullptr;
	static SysStr^ TOK_WAIT = "WAIT";
	static SysStr^ TOK_WEEK = "WEEK";
	static SysStr^ TOK_WEEKDAY = "WEEKDAY";
	static SysStr^ TOK_WHEN = "WHEN";
	static SysStr^ TOK_WHERE = "WHERE";
	static SysStr^ TOK_WHILE = "WHILE";
	static SysStr^ TOK_WINDOW = "WINDOW";
	static SysStr^ TOK_WITH = "WITH";
	static SysStr^ TOK_WITHOUT = "WITHOUT";
	static SysStr^ TOK_WORK = "WORK";
	static SysStr^ TOK_WRITE = "WRITE";
	static SysStr^ TOK_YEAR = "YEAR";
	static SysStr^ TOK_YEARDAY = "YEARDAY";
	static SysStr^ TOK_YYERRCODE = "YYERRCODE";
	static SysStr^ TOK_ZONE = "ZONE";

};

}