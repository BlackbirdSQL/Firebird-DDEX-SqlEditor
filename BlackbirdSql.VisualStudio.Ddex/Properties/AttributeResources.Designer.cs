//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlackbirdSql.VisualStudio.Ddex.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AttributeResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AttributeResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlackbirdSql.VisualStudio.Ddex.Properties.AttributeResources", typeof(AttributeResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds.
        /// </summary>
        public static string ConverterUom_Seconds {
            get {
                return ResourceManager.GetString("ConverterUom_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds.
        /// </summary>
        public static string ConverterUom_SecondsDisabled {
            get {
                return ResourceManager.GetString("ConverterUom_SecondsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds.
        /// </summary>
        public static string ConverterUom_SecondsUnlimited {
            get {
                return ResourceManager.GetString("ConverterUom_SecondsUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to separator.
        /// </summary>
        public static string ConverterUom_Separator {
            get {
                return ResourceManager.GetString("ConverterUom_Separator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to default.
        /// </summary>
        public static string ConverterUomDefault_Seconds {
            get {
                return ResourceManager.GetString("ConverterUomDefault_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to default.
        /// </summary>
        public static string ConverterUomDefault_SecondsDisabled {
            get {
                return ResourceManager.GetString("ConverterUomDefault_SecondsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to default.
        /// </summary>
        public static string ConverterUomDefault_SecondsUnlimited {
            get {
                return ResourceManager.GetString("ConverterUomDefault_SecondsUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to default.
        /// </summary>
        public static string ConverterUomDefault_Separator {
            get {
                return ResourceManager.GetString("ConverterUomDefault_Separator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} seconds.
        /// </summary>
        public static string ConverterUomFormat_Seconds {
            get {
                return ResourceManager.GetString("ConverterUomFormat_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} seconds.
        /// </summary>
        public static string ConverterUomFormat_SecondsDisabled {
            get {
                return ResourceManager.GetString("ConverterUomFormat_SecondsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} seconds.
        /// </summary>
        public static string ConverterUomFormat_SecondsUnlimited {
            get {
                return ResourceManager.GetString("ConverterUomFormat_SecondsUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}].
        /// </summary>
        public static string ConverterUomFormat_Separator {
            get {
                return ResourceManager.GetString("ConverterUomFormat_Separator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatDefault_Seconds {
            get {
                return ResourceManager.GetString("ConverterUomFormatDefault_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatDefault_SecondsDisabled {
            get {
                return ResourceManager.GetString("ConverterUomFormatDefault_SecondsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatDefault_SecondsUnlimited {
            get {
                return ResourceManager.GetString("ConverterUomFormatDefault_SecondsUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default [{0}].
        /// </summary>
        public static string ConverterUomFormatDefault_Separator {
            get {
                return ResourceManager.GetString("ConverterUomFormatDefault_Separator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatMax_Seconds {
            get {
                return ResourceManager.GetString("ConverterUomFormatMax_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatMax_SecondsDisabled {
            get {
                return ResourceManager.GetString("ConverterUomFormatMax_SecondsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatMax_SecondsUnlimited {
            get {
                return ResourceManager.GetString("ConverterUomFormatMax_SecondsUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatMin_Seconds {
            get {
                return ResourceManager.GetString("ConverterUomFormatMin_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatMin_SecondsDisabled {
            get {
                return ResourceManager.GetString("ConverterUomFormatMin_SecondsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlimited [{0} seconds].
        /// </summary>
        public static string ConverterUomFormatMin_SecondsUnlimited {
            get {
                return ResourceManager.GetString("ConverterUomFormatMin_SecondsUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to max,maximum.
        /// </summary>
        public static string ConverterUomMax_Seconds {
            get {
                return ResourceManager.GetString("ConverterUomMax_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to max,maximum.
        /// </summary>
        public static string ConverterUomMax_SecondsDisabled {
            get {
                return ResourceManager.GetString("ConverterUomMax_SecondsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to max,maximum.
        /// </summary>
        public static string ConverterUomMax_SecondsUnlimited {
            get {
                return ResourceManager.GetString("ConverterUomMax_SecondsUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to min,minimum.
        /// </summary>
        public static string ConverterUomMin_Seconds {
            get {
                return ResourceManager.GetString("ConverterUomMin_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to min,minimum,unlimited,disabled.
        /// </summary>
        public static string ConverterUomMin_SecondsDisabled {
            get {
                return ResourceManager.GetString("ConverterUomMin_SecondsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to min,minimum,unlimited.
        /// </summary>
        public static string ConverterUomMin_SecondsUnlimited {
            get {
                return ResourceManager.GetString("ConverterUomMin_SecondsUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugging.
        /// </summary>
        public static string OptionCategoryDebugging {
            get {
                return ResourceManager.GetString("OptionCategoryDebugging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagnostics.
        /// </summary>
        public static string OptionCategoryDiagnostics {
            get {
                return ResourceManager.GetString("OptionCategoryDiagnostics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation.
        /// </summary>
        public static string OptionCategoryEntityFramework {
            get {
                return ResourceManager.GetString("OptionCategoryEntityFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection equivalency keys.
        /// </summary>
        public static string OptionCategoryEquivalency {
            get {
                return ResourceManager.GetString("OptionCategoryEquivalency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Mandatory equivalency keys.
        /// </summary>
        public static string OptionCategoryEquivalencyMandatory {
            get {
                return ResourceManager.GetString("OptionCategoryEquivalencyMandatory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional equivalency keys (Requires IDE restart).
        /// </summary>
        public static string OptionCategoryEquivalencyOptional {
            get {
                return ResourceManager.GetString("OptionCategoryEquivalencyOptional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  General.
        /// </summary>
        public static string OptionCategoryGeneral {
            get {
                return ResourceManager.GetString("OptionCategoryGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query designer.
        /// </summary>
        public static string OptionCategoryQueryDesigner {
            get {
                return ResourceManager.GetString("OptionCategoryQueryDesigner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables diagnostics logging to a log file..
        /// </summary>
        public static string OptionDescriptionDebugEnableDiagnosticsLog {
            get {
                return ResourceManager.GetString("OptionDescriptionDebugEnableDiagnosticsLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the execution of Diag.Trace() calls..
        /// </summary>
        public static string OptionDescriptionDebugEnableTrace {
            get {
                return ResourceManager.GetString("OptionDescriptionDebugEnableTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables Sql Tracer output to be directed to Diag.Trace()..
        /// </summary>
        public static string OptionDescriptionDebugEnableTracer {
            get {
                return ResourceManager.GetString("OptionDescriptionDebugEnableTracer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location of diagnostics log file..
        /// </summary>
        public static string OptionDescriptionDebugLogFile {
            get {
                return ResourceManager.GetString("OptionDescriptionDebugLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saves the extrapolated IVsDataObjectSupport xml (TObjectSupport.xml), after imports, to the directory location of the diagnostics log file..
        /// </summary>
        public static string OptionDescriptionDebugSaveExtrapolatedXml {
            get {
                return ResourceManager.GetString("OptionDescriptionDebugSaveExtrapolatedXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the application making the connection..
        /// </summary>
        public static string OptionDescriptionEquivalencyApplicationName {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection character set encoding..
        /// </summary>
        public static string OptionDescriptionEquivalencyCharset {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyCharset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client library for Firebird Embedded..
        /// </summary>
        public static string OptionDescriptionEquivalencyClientLibrary {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyClientLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The time (in seconds) for command execution..
        /// </summary>
        public static string OptionDescriptionEquivalencyCommandTimeout {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyCommandTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables wire compression..
        /// </summary>
        public static string OptionDescriptionEquivalencyCompression {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyCompression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a connection is returned to the pool, its creation time is compared with the current time, and the connection is destroyed if that time span (in seconds) exceeds the value specified by connection lifetime..
        /// </summary>
        public static string OptionDescriptionEquivalencyConnectionLifeTime {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyConnectionLifeTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The time (in seconds) to wait for a connection to open..
        /// </summary>
        public static string OptionDescriptionEquivalencyConnectionTimeout {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key used for database decryption..
        /// </summary>
        public static string OptionDescriptionEquivalencyCryptKey {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyCryptKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the actual database or the database to be used when a connection is open. It is normally the path to an .FDB file or an alias..
        /// </summary>
        public static string OptionDescriptionEquivalencyDatabase {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Firebird server to which to connect..
        /// </summary>
        public static string OptionDescriptionEquivalencyDataSource {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyDataSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many cache buffers to use for this session..
        /// </summary>
        public static string OptionDescriptionEquivalencyDbCachePages {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyDbCachePages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database SQL dialect..
        /// </summary>
        public static string OptionDescriptionEquivalencyDialect {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyDialect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true, enlists the connections in the current transaction..
        /// </summary>
        public static string OptionDescriptionEquivalencyEnlist {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyEnlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of rows to be fetched in a single call to read into the internal row buffer..
        /// </summary>
        public static string OptionDescriptionEquivalencyFetchSize {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyFetchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default Isolation Level for implicit transactions..
        /// </summary>
        public static string OptionDescriptionEquivalencyIsolationLevel {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyIsolationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of connections allowed in the pool..
        /// </summary>
        public static string OptionDescriptionEquivalencyMaxPoolSize {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyMaxPoolSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimun number of connections allowed in the pool..
        /// </summary>
        public static string OptionDescriptionEquivalencyMinPoolSize {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyMinPoolSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables database triggers for this connection..
        /// </summary>
        public static string OptionDescriptionEquivalencyNoDatabaseTriggers {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyNoDatabaseTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true, disables sweeping the database upon attachment..
        /// </summary>
        public static string OptionDescriptionEquivalencyNoGarbageCollect {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyNoGarbageCollect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size (in bytes) of network packets. PacketSize may be in the range 512-32767 bytes..
        /// </summary>
        public static string OptionDescriptionEquivalencyPacketSize {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyPacketSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of parallel workers to use for operations in Firebird..
        /// </summary>
        public static string OptionDescriptionEquivalencyParallelWorkers {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyParallelWorkers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true the connection is grabbed from a pool or, if necessary, created and added to the appropriate pool..
        /// </summary>
        public static string OptionDescriptionEquivalencyPooling {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyPooling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port to use for TCP/IP connections..
        /// </summary>
        public static string OptionDescriptionEquivalencyPort {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the number of rows affected by a command when true..
        /// </summary>
        public static string OptionDescriptionEquivalencyReturnRecordsAffected {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyReturnRecordsAffected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user role..
        /// </summary>
        public static string OptionDescriptionEquivalencyRole {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of server used..
        /// </summary>
        public static string OptionDescriptionEquivalencyServerType {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyServerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the User ID to be used when connecting to the data source..
        /// </summary>
        public static string OptionDescriptionEquivalencyUserID {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyUserID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection for wire encryption..
        /// </summary>
        public static string OptionDescriptionEquivalencyWireCrypt {
            get {
                return ResourceManager.GetString("OptionDescriptionEquivalencyWireCrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the execution of Diagnostics calls. This option should remain enabled. Disabling does not disable Exceptions..
        /// </summary>
        public static string OptionDescriptionGeneralEnableDiagnostics {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralEnableDiagnostics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables logging of tasks to the output window pane. This option should remain enabled..
        /// </summary>
        public static string OptionDescriptionGeneralEnableTaskLog {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralEnableTaskLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, includes any configured connection strings that exist in a solution&apos;s projects in the drop down selection lists when adding a new connection..
        /// </summary>
        public static string OptionDescriptionGeneralIncludeAppConnections {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralIncludeAppConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum time a trigger linkage parser will wait for completion before requesting a time extension. Range: 10 - 120 seconds..
        /// </summary>
        public static string OptionDescriptionGeneralLinkageTimeout {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralLinkageTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, disables asynchronous Trigger/Generator linkage and linkage will only be performed when it is actually required..
        /// </summary>
        public static string OptionDescriptionGeneralOnDemandLinkage {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralOnDemandLinkage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables once off validation. If disabled validation will be repeated each time a Solution is loaded. Only applicable if Invariant or Edmx validation is enabled..
        /// </summary>
        public static string OptionDescriptionGeneralPersistentValidation {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralPersistentValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the query designer diagram pane to visible when a table or view&apos;s data is initially retrieved..
        /// </summary>
        public static string OptionDescriptionGeneralShowDiagramPane {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralShowDiagramPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to allow BlackbirdSql to ensure that the Firebird Client and EntityFramework are configured in your non-CPS projects&apos; App.config..
        /// </summary>
        public static string OptionDescriptionGeneralValidateConfig {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralValidateConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to allow BlackbirdSql to ensure a Session connection is valid before accepting Connection Dialog information..
        /// </summary>
        public static string OptionDescriptionGeneralValidateConnectionOnFormAccept {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralValidateConnectionOnFormAccept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to allow BlackbirdSql to update legacy edmx models to use EntityFramework 6..
        /// </summary>
        public static string OptionDescriptionGeneralValidateEdmx {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralValidateEdmx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to allow BlackbirdSql to validate your solution&apos;s Invariant, EntityFramework and Edmx settings..
        /// </summary>
        public static string OptionDescriptionGeneralValidateSolution {
            get {
                return ResourceManager.GetString("OptionDescriptionGeneralValidateSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the folder to be used for the diagnostics log file..
        /// </summary>
        public static string OptionDialogDebugLogFile {
            get {
                return ResourceManager.GetString("OptionDialogDebugLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Files(*.*)|*.*.
        /// </summary>
        public static string OptionDialogFilterLogFile {
            get {
                return ResourceManager.GetString("OptionDialogFilterLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable diagnostics logging.
        /// </summary>
        public static string OptionDisplayDebugEnableDiagnosticsLog {
            get {
                return ResourceManager.GetString("OptionDisplayDebugEnableDiagnosticsLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save extrapolated xml.
        /// </summary>
        public static string OptionDisplayDebugEnableSaveExtrapolatedXml {
            get {
                return ResourceManager.GetString("OptionDisplayDebugEnableSaveExtrapolatedXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable trace.
        /// </summary>
        public static string OptionDisplayDebugEnableTrace {
            get {
                return ResourceManager.GetString("OptionDisplayDebugEnableTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable tracer.
        /// </summary>
        public static string OptionDisplayDebugEnableTracer {
            get {
                return ResourceManager.GetString("OptionDisplayDebugEnableTracer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log file.
        /// </summary>
        public static string OptionDisplayDebugLogFile {
            get {
                return ResourceManager.GetString("OptionDisplayDebugLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application name.
        /// </summary>
        public static string OptionDisplayEquivalencyApplicationName {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character set.
        /// </summary>
        public static string OptionDisplayEquivalencyCharset {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyCharset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client library.
        /// </summary>
        public static string OptionDisplayEquivalencyClientLibrary {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyClientLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command timeout.
        /// </summary>
        public static string OptionDisplayEquivalencyCommandTimeout {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyCommandTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression.
        /// </summary>
        public static string OptionDisplayEquivalencyCompression {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyCompression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection lifetime.
        /// </summary>
        public static string OptionDisplayEquivalencyConnectionLifeTime {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyConnectionLifeTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection timeout.
        /// </summary>
        public static string OptionDisplayEquivalencyConnectionTimeout {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crypt key.
        /// </summary>
        public static string OptionDisplayEquivalencyCryptKey {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyCryptKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database.
        /// </summary>
        public static string OptionDisplayEquivalencyDatabase {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataSource.
        /// </summary>
        public static string OptionDisplayEquivalencyDataSource {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyDataSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Db cache pages.
        /// </summary>
        public static string OptionDisplayEquivalencyDbCachePages {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyDbCachePages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialect.
        /// </summary>
        public static string OptionDisplayEquivalencyDialect {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyDialect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enlist.
        /// </summary>
        public static string OptionDisplayEquivalencyEnlist {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyEnlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FetchSize.
        /// </summary>
        public static string OptionDisplayEquivalencyFetchSize {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyFetchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsolationLevel.
        /// </summary>
        public static string OptionDisplayEquivalencyIsolationLevel {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyIsolationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaxPoolSize.
        /// </summary>
        public static string OptionDisplayEquivalencyMaxPoolSize {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyMaxPoolSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MinPoolSize.
        /// </summary>
        public static string OptionDisplayEquivalencyMinPoolSize {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyMinPoolSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No triggers.
        /// </summary>
        public static string OptionDisplayEquivalencyNoDatabaseTriggers {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyNoDatabaseTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No garbage collect.
        /// </summary>
        public static string OptionDisplayEquivalencyNoGarbageCollect {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyNoGarbageCollect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PacketSize.
        /// </summary>
        public static string OptionDisplayEquivalencyPacketSize {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyPacketSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parallel workers.
        /// </summary>
        public static string OptionDisplayEquivalencyParallelWorkers {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyParallelWorkers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pooling.
        /// </summary>
        public static string OptionDisplayEquivalencyPooling {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyPooling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        public static string OptionDisplayEquivalencyPort {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Records affected.
        /// </summary>
        public static string OptionDisplayEquivalencyReturnRecordsAffected {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyReturnRecordsAffected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role.
        /// </summary>
        public static string OptionDisplayEquivalencyRole {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServerType.
        /// </summary>
        public static string OptionDisplayEquivalencyServerType {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyServerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User ID.
        /// </summary>
        public static string OptionDisplayEquivalencyUserID {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyUserID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wire crypt.
        /// </summary>
        public static string OptionDisplayEquivalencyWireCrypt {
            get {
                return ResourceManager.GetString("OptionDisplayEquivalencyWireCrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable diagnostics.
        /// </summary>
        public static string OptionDisplayGeneralEnableDiagnostics {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralEnableDiagnostics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable task logging.
        /// </summary>
        public static string OptionDisplayGeneralEnableTaskLog {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralEnableTaskLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include solution connections.
        /// </summary>
        public static string OptionDisplayGeneralIncludeAppConnections {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralIncludeAppConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger linkage timeout.
        /// </summary>
        public static string OptionDisplayGeneralLinkageTimeout {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralLinkageTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On-demand linkage.
        /// </summary>
        public static string OptionDisplayGeneralOnDemandLinkage {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralOnDemandLinkage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Persistent validation flags.
        /// </summary>
        public static string OptionDisplayGeneralPersistentValidation {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralPersistentValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initial state of Diagram Pane.
        /// </summary>
        public static string OptionDisplayGeneralShowDiagramPane {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralShowDiagramPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Validate App.config.
        /// </summary>
        public static string OptionDisplayGeneralValidateConfig {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralValidateConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validate session connections.
        /// </summary>
        public static string OptionDisplayGeneralValidateConnectionOnFormAccept {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralValidateConnectionOnFormAccept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Update legacy edmx models.
        /// </summary>
        public static string OptionDisplayGeneralValidateEdmx {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralValidateEdmx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Validate Solution Configuration.
        /// </summary>
        public static string OptionDisplayGeneralValidateSolution {
            get {
                return ResourceManager.GetString("OptionDisplayGeneralValidateSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BlackbirdSql DDEX 2.0.
        /// </summary>
        public static string OptionPageCategory {
            get {
                return ResourceManager.GetString("OptionPageCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugging.
        /// </summary>
        public static string OptionPageNameDebug {
            get {
                return ResourceManager.GetString("OptionPageNameDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string OptionPageNameGeneral {
            get {
                return ResourceManager.GetString("OptionPageNameGeneral", resourceCulture);
            }
        }
    }
}
