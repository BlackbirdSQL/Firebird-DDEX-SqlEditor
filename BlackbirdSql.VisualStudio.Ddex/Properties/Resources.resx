<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataProvider_Ddex" xml:space="preserve">
    <value>BlackbirdSql .NET Framework DDEX 2.0 Provider for Firebird</value>
  </data>
  <data name="DataProvider_Ddex_DataSource_Description" xml:space="preserve">
    <value>Use this selection to connect to Firebird using the DDEX 2.0 BlackbirdSql Provider.</value>
  </data>
  <data name="DataProvider_Ddex_Description" xml:space="preserve">
    <value>Use this data provider to connect to a Firebird database.</value>
  </data>
  <data name="DataProvider_Ddex_Short" xml:space="preserve">
    <value>FirebirdClient [BlackbirdSql]</value>
  </data>
  <data name="DataProvider_Name" xml:space="preserve">
    <value>BlackbirdSql .NET Framework Data Provider for Firebird {0}</value>
  </data>
  <data name="DataSource_FirebirdServer" xml:space="preserve">
    <value>Firebird Server</value>
  </data>
  <data name="ExceptionAddingNullSite" xml:space="preserve">
    <value>Attempt to add a null site</value>
  </data>
  <data name="ExceptionAttemptToExitSyncFromAsync" xml:space="preserve">
    <value>Attempt to exit a synchronous state when the object was not in a synchronous state</value>
  </data>
  <data name="ExceptionClassAssemblyNotFound" xml:space="preserve">
    <value>{0} class assembly not found</value>
  </data>
  <data name="ExceptionCollectionNotSupported" xml:space="preserve">
    <value>The metadata collection {0} is not supported.</value>
  </data>
  <data name="ExceptionDuplicatingSiteInformation" xml:space="preserve">
    <value>Source information for site already exists</value>
  </data>
  <data name="ExceptionFailedToRetrievePackageSettings" xml:space="preserve">
    <value>Failed to retrieve Package settings</value>
  </data>
  <data name="ExceptionFailedToSubscribeSettingsEvents" xml:space="preserve">
    <value>Failed to subscribe to Settings events</value>
  </data>
  <data name="ExceptionIconResourceInvalid" xml:space="preserve">
    <value>Icon resource invalid: {0}.</value>
  </data>
  <data name="ExceptionIconResourceNotFound" xml:space="preserve">
    <value>Icon resource not found: {0}.</value>
  </data>
  <data name="ExceptionImportResourceNotFound" xml:space="preserve">
    <value>Import resource not found: {0}.</value>
  </data>
  <data name="ExceptionInvalidParameters" xml:space="preserve">
    <value>Parameters are invalid</value>
  </data>
  <data name="ExceptionInvalidPrebuiltMetadataCall" xml:space="preserve">
    <value>The metadata collection {0} is pre-built and may not be called from here.</value>
  </data>
  <data name="ExceptionInvalidRawMetadataCall" xml:space="preserve">
    <value>The raw metadata collection {0} may not be called from here.</value>
  </data>
  <data name="ExceptionResourceNotFound" xml:space="preserve">
    <value>Resource not found: {0}</value>
  </data>
  <data name="ExceptionRestrictionsNotEqualToSpecified" xml:space="preserve">
    <value>The number of provided specifications [{0}] is not equal to the specified restrictions [{1}].</value>
  </data>
  <data name="ExceptionSiteIsNull" xml:space="preserve">
    <value>Site is null</value>
  </data>
  <data name="ExceptionSyncTokenSourceNull" xml:space="preserve">
    <value>SyncTokenSource was found to be null when exiting sync</value>
  </data>
  <data name="ExceptionUnsupportedPopulationMechanism" xml:space="preserve">
    <value>Unsupported population mechanism: {0}</value>
  </data>
  <data name="IVsDataConnectionProperties_PropertyInvalid" xml:space="preserve">
    <value>Invalid IVsDataConnectionProperties property: {0}.</value>
  </data>
  <data name="LabelDatabasePath" xml:space="preserve">
    <value>Database path: {0}.</value>
  </data>
  <data name="Provider_DisplayName" xml:space="preserve">
    <value>.NET Provider for Firebird (FirebirdClient)</value>
  </data>
  <data name="Provider_ShortDisplayName" xml:space="preserve">
    <value>FirebirdClient Provider</value>
  </data>
  <data name="QueryDesignerDocument_NewQueryCaption" xml:space="preserve">
    <value>Query{1}: DesignData{0}</value>
  </data>
  <data name="QueryDesignerDocument_RetrieveDataCaption" xml:space="preserve">
    <value>{1}: DesignData{0}</value>
  </data>
</root>